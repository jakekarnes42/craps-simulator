{"version":3,"file":"static/js/bulkGame.worker.e7b004db.js","mappings":"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","sources":["../node_modules/humanize-duration/humanize-duration.js","../webpack/bootstrap","game/RoundingType.ts","util/Util.tsx","game/OddsBetStrategy.ts","game/PressStrategy.ts","game/Configuration.ts","game/GameState.ts","game/Session.ts","worker/bulkGame.worker.ts"],"sourcesContent":["// HumanizeDuration.js - https://git.io/j0HgmQ\n\n// @ts-check\n\n/**\n * @typedef {string | ((unitCount: number) => string)} Unit\n */\n\n/**\n * @typedef {(\"y\" | \"mo\" | \"w\" | \"d\" | \"h\" | \"m\" | \"s\" | \"ms\")} UnitName\n */\n\n/**\n * @typedef {Object} UnitMeasures\n * @prop {number} y\n * @prop {number} mo\n * @prop {number} w\n * @prop {number} d\n * @prop {number} h\n * @prop {number} m\n * @prop {number} s\n * @prop {number} ms\n */\n\n/**\n * @internal\n * @typedef {[string, string, string, string, string, string, string, string, string, string]} DigitReplacements\n */\n\n/**\n * @typedef {Object} Language\n * @prop {Unit} y\n * @prop {Unit} mo\n * @prop {Unit} w\n * @prop {Unit} d\n * @prop {Unit} h\n * @prop {Unit} m\n * @prop {Unit} s\n * @prop {Unit} ms\n * @prop {string} [decimal]\n * @prop {string} [delimiter]\n * @prop {DigitReplacements} [_digitReplacements]\n * @prop {boolean} [_numberFirst]\n * @prop {boolean} [_hideCountIf2]\n */\n\n/**\n * @typedef {Object} Options\n * @prop {string} [language]\n * @prop {Record<string, Language>} [languages]\n * @prop {string[]} [fallbacks]\n * @prop {string} [delimiter]\n * @prop {string} [spacer]\n * @prop {boolean} [round]\n * @prop {number} [largest]\n * @prop {UnitName[]} [units]\n * @prop {string} [decimal]\n * @prop {string} [conjunction]\n * @prop {number} [maxDecimalPoints]\n * @prop {UnitMeasures} [unitMeasures]\n * @prop {boolean} [serialComma]\n * @prop {DigitReplacements} [digitReplacements]\n */\n\n/**\n * @internal\n * @typedef {Required<Options>} NormalizedOptions\n */\n\n(function () {\n  // Fallback for `Object.assign` if relevant.\n  var assign =\n    Object.assign ||\n    /** @param {...any} destination */\n    function (destination) {\n      var source;\n      for (var i = 1; i < arguments.length; i++) {\n        source = arguments[i];\n        for (var prop in source) {\n          if (has(source, prop)) {\n            destination[prop] = source[prop];\n          }\n        }\n      }\n      return destination;\n    };\n\n  // Fallback for `Array.isArray` if relevant.\n  var isArray =\n    Array.isArray ||\n    function (arg) {\n      return Object.prototype.toString.call(arg) === \"[object Array]\";\n    };\n\n  // This has to be defined separately because of a bug: we want to alias\n  // `gr` and `el` for backwards-compatiblity. In a breaking change, we can\n  // remove `gr` entirely.\n  // See https://github.com/EvanHahn/HumanizeDuration.js/issues/143 for more.\n  var GREEK = language(\n    function (c) {\n      return c === 1 ? \"χρόνος\" : \"χρόνια\";\n    },\n    function (c) {\n      return c === 1 ? \"μήνας\" : \"μήνες\";\n    },\n    function (c) {\n      return c === 1 ? \"εβδομάδα\" : \"εβδομάδες\";\n    },\n    function (c) {\n      return c === 1 ? \"μέρα\" : \"μέρες\";\n    },\n    function (c) {\n      return c === 1 ? \"ώρα\" : \"ώρες\";\n    },\n    function (c) {\n      return c === 1 ? \"λεπτό\" : \"λεπτά\";\n    },\n    function (c) {\n      return c === 1 ? \"δευτερόλεπτο\" : \"δευτερόλεπτα\";\n    },\n    function (c) {\n      return (c === 1 ? \"χιλιοστό\" : \"χιλιοστά\") + \" του δευτερολέπτου\";\n    },\n    \",\"\n  );\n\n  /**\n   * @internal\n   * @type {Record<string, Language>}\n   */\n  var LANGUAGES = {\n    af: language(\n      \"jaar\",\n      function (c) {\n        return \"maand\" + (c === 1 ? \"\" : \"e\");\n      },\n      function (c) {\n        return c === 1 ? \"week\" : \"weke\";\n      },\n      function (c) {\n        return c === 1 ? \"dag\" : \"dae\";\n      },\n      function (c) {\n        return c === 1 ? \"uur\" : \"ure\";\n      },\n      function (c) {\n        return c === 1 ? \"minuut\" : \"minute\";\n      },\n      function (c) {\n        return \"sekonde\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"millisekonde\" + (c === 1 ? \"\" : \"s\");\n      },\n      \",\"\n    ),\n    am: language(\"ዓመት\", \"ወር\", \"ሳምንት\", \"ቀን\", \"ሰዓት\", \"ደቂቃ\", \"ሰከንድ\", \"ሚሊሰከንድ\"),\n    ar: assign(\n      language(\n        function (c) {\n          return [\"سنة\", \"سنتان\", \"سنوات\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"شهر\", \"شهران\", \"أشهر\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"أسبوع\", \"أسبوعين\", \"أسابيع\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"يوم\", \"يومين\", \"أيام\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"ساعة\", \"ساعتين\", \"ساعات\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"دقيقة\", \"دقيقتان\", \"دقائق\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"ثانية\", \"ثانيتان\", \"ثواني\"][getArabicForm(c)];\n        },\n        function (c) {\n          return [\"جزء من الثانية\", \"جزآن من الثانية\", \"أجزاء من الثانية\"][\n            getArabicForm(c)\n          ];\n        },\n        \",\"\n      ),\n      {\n        delimiter: \" ﻭ \",\n        _hideCountIf2: true,\n        _digitReplacements: [\"۰\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"]\n      }\n    ),\n    bg: language(\n      function (c) {\n        return [\"години\", \"година\", \"години\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"месеца\", \"месец\", \"месеца\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"седмици\", \"седмица\", \"седмици\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"дни\", \"ден\", \"дни\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"часа\", \"час\", \"часа\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"минути\", \"минута\", \"минути\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"секунди\", \"секунда\", \"секунди\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"милисекунди\", \"милисекунда\", \"милисекунди\"][getSlavicForm(c)];\n      },\n      \",\"\n    ),\n    bn: language(\n      \"বছর\",\n      \"মাস\",\n      \"সপ্তাহ\",\n      \"দিন\",\n      \"ঘন্টা\",\n      \"মিনিট\",\n      \"সেকেন্ড\",\n      \"মিলিসেকেন্ড\"\n    ),\n    ca: language(\n      function (c) {\n        return \"any\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"mes\" + (c === 1 ? \"\" : \"os\");\n      },\n      function (c) {\n        return \"setman\" + (c === 1 ? \"a\" : \"es\");\n      },\n      function (c) {\n        return \"di\" + (c === 1 ? \"a\" : \"es\");\n      },\n      function (c) {\n        return \"hor\" + (c === 1 ? \"a\" : \"es\");\n      },\n      function (c) {\n        return \"minut\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"segon\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"milisegon\" + (c === 1 ? \"\" : \"s\");\n      },\n      \",\"\n    ),\n    ckb: language(\n      \"ساڵ\",\n      \"مانگ\",\n      \"هەفتە\",\n      \"ڕۆژ\",\n      \"کاژێر\",\n      \"خولەک\",\n      \"چرکە\",\n      \"میلی چرکە\",\n      \".\"\n    ),\n    cs: language(\n      function (c) {\n        return [\"rok\", \"roku\", \"roky\", \"let\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"měsíc\", \"měsíce\", \"měsíce\", \"měsíců\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"týden\", \"týdne\", \"týdny\", \"týdnů\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"den\", \"dne\", \"dny\", \"dní\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"hodina\", \"hodiny\", \"hodiny\", \"hodin\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"minuta\", \"minuty\", \"minuty\", \"minut\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"sekunda\", \"sekundy\", \"sekundy\", \"sekund\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      function (c) {\n        return [\"milisekunda\", \"milisekundy\", \"milisekundy\", \"milisekund\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      \",\"\n    ),\n    cy: language(\n      \"flwyddyn\",\n      \"mis\",\n      \"wythnos\",\n      \"diwrnod\",\n      \"awr\",\n      \"munud\",\n      \"eiliad\",\n      \"milieiliad\"\n    ),\n    da: language(\n      \"år\",\n      function (c) {\n        return \"måned\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"uge\" + (c === 1 ? \"\" : \"r\");\n      },\n      function (c) {\n        return \"dag\" + (c === 1 ? \"\" : \"e\");\n      },\n      function (c) {\n        return \"time\" + (c === 1 ? \"\" : \"r\");\n      },\n      function (c) {\n        return \"minut\" + (c === 1 ? \"\" : \"ter\");\n      },\n      function (c) {\n        return \"sekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"millisekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      \",\"\n    ),\n    de: language(\n      function (c) {\n        return \"Jahr\" + (c === 1 ? \"\" : \"e\");\n      },\n      function (c) {\n        return \"Monat\" + (c === 1 ? \"\" : \"e\");\n      },\n      function (c) {\n        return \"Woche\" + (c === 1 ? \"\" : \"n\");\n      },\n      function (c) {\n        return \"Tag\" + (c === 1 ? \"\" : \"e\");\n      },\n      function (c) {\n        return \"Stunde\" + (c === 1 ? \"\" : \"n\");\n      },\n      function (c) {\n        return \"Minute\" + (c === 1 ? \"\" : \"n\");\n      },\n      function (c) {\n        return \"Sekunde\" + (c === 1 ? \"\" : \"n\");\n      },\n      function (c) {\n        return \"Millisekunde\" + (c === 1 ? \"\" : \"n\");\n      },\n      \",\"\n    ),\n    el: GREEK,\n    en: language(\n      function (c) {\n        return \"year\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"month\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"week\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"day\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"hour\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"minute\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"second\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"millisecond\" + (c === 1 ? \"\" : \"s\");\n      }\n    ),\n    eo: language(\n      function (c) {\n        return \"jaro\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"monato\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"semajno\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"tago\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"horo\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"minuto\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"sekundo\" + (c === 1 ? \"\" : \"j\");\n      },\n      function (c) {\n        return \"milisekundo\" + (c === 1 ? \"\" : \"j\");\n      },\n      \",\"\n    ),\n    es: language(\n      function (c) {\n        return \"año\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"mes\" + (c === 1 ? \"\" : \"es\");\n      },\n      function (c) {\n        return \"semana\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"día\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"hora\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"minuto\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"segundo\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"milisegundo\" + (c === 1 ? \"\" : \"s\");\n      },\n      \",\"\n    ),\n    et: language(\n      function (c) {\n        return \"aasta\" + (c === 1 ? \"\" : \"t\");\n      },\n      function (c) {\n        return \"kuu\" + (c === 1 ? \"\" : \"d\");\n      },\n      function (c) {\n        return \"nädal\" + (c === 1 ? \"\" : \"at\");\n      },\n      function (c) {\n        return \"päev\" + (c === 1 ? \"\" : \"a\");\n      },\n      function (c) {\n        return \"tund\" + (c === 1 ? \"\" : \"i\");\n      },\n      function (c) {\n        return \"minut\" + (c === 1 ? \"\" : \"it\");\n      },\n      function (c) {\n        return \"sekund\" + (c === 1 ? \"\" : \"it\");\n      },\n      function (c) {\n        return \"millisekund\" + (c === 1 ? \"\" : \"it\");\n      },\n      \",\"\n    ),\n    eu: language(\n      \"urte\",\n      \"hilabete\",\n      \"aste\",\n      \"egun\",\n      \"ordu\",\n      \"minutu\",\n      \"segundo\",\n      \"milisegundo\",\n      \",\"\n    ),\n    fa: language(\n      \"سال\",\n      \"ماه\",\n      \"هفته\",\n      \"روز\",\n      \"ساعت\",\n      \"دقیقه\",\n      \"ثانیه\",\n      \"میلی ثانیه\"\n    ),\n    fi: language(\n      function (c) {\n        return c === 1 ? \"vuosi\" : \"vuotta\";\n      },\n      function (c) {\n        return c === 1 ? \"kuukausi\" : \"kuukautta\";\n      },\n      function (c) {\n        return \"viikko\" + (c === 1 ? \"\" : \"a\");\n      },\n      function (c) {\n        return \"päivä\" + (c === 1 ? \"\" : \"ä\");\n      },\n      function (c) {\n        return \"tunti\" + (c === 1 ? \"\" : \"a\");\n      },\n      function (c) {\n        return \"minuutti\" + (c === 1 ? \"\" : \"a\");\n      },\n      function (c) {\n        return \"sekunti\" + (c === 1 ? \"\" : \"a\");\n      },\n      function (c) {\n        return \"millisekunti\" + (c === 1 ? \"\" : \"a\");\n      },\n      \",\"\n    ),\n    fo: language(\n      \"ár\",\n      function (c) {\n        return c === 1 ? \"mánaður\" : \"mánaðir\";\n      },\n      function (c) {\n        return c === 1 ? \"vika\" : \"vikur\";\n      },\n      function (c) {\n        return c === 1 ? \"dagur\" : \"dagar\";\n      },\n      function (c) {\n        return c === 1 ? \"tími\" : \"tímar\";\n      },\n      function (c) {\n        return c === 1 ? \"minuttur\" : \"minuttir\";\n      },\n      \"sekund\",\n      \"millisekund\",\n      \",\"\n    ),\n    fr: language(\n      function (c) {\n        return \"an\" + (c >= 2 ? \"s\" : \"\");\n      },\n      \"mois\",\n      function (c) {\n        return \"semaine\" + (c >= 2 ? \"s\" : \"\");\n      },\n      function (c) {\n        return \"jour\" + (c >= 2 ? \"s\" : \"\");\n      },\n      function (c) {\n        return \"heure\" + (c >= 2 ? \"s\" : \"\");\n      },\n      function (c) {\n        return \"minute\" + (c >= 2 ? \"s\" : \"\");\n      },\n      function (c) {\n        return \"seconde\" + (c >= 2 ? \"s\" : \"\");\n      },\n      function (c) {\n        return \"milliseconde\" + (c >= 2 ? \"s\" : \"\");\n      },\n      \",\"\n    ),\n    gr: GREEK,\n    he: language(\n      function (c) {\n        return c === 1 ? \"שנה\" : \"שנים\";\n      },\n      function (c) {\n        return c === 1 ? \"חודש\" : \"חודשים\";\n      },\n      function (c) {\n        return c === 1 ? \"שבוע\" : \"שבועות\";\n      },\n      function (c) {\n        return c === 1 ? \"יום\" : \"ימים\";\n      },\n      function (c) {\n        return c === 1 ? \"שעה\" : \"שעות\";\n      },\n      function (c) {\n        return c === 1 ? \"דקה\" : \"דקות\";\n      },\n      function (c) {\n        return c === 1 ? \"שניה\" : \"שניות\";\n      },\n      function (c) {\n        return c === 1 ? \"מילישנייה\" : \"מילישניות\";\n      }\n    ),\n    hr: language(\n      function (c) {\n        if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {\n          return \"godine\";\n        }\n        return \"godina\";\n      },\n      function (c) {\n        if (c === 1) {\n          return \"mjesec\";\n        } else if (c === 2 || c === 3 || c === 4) {\n          return \"mjeseca\";\n        }\n        return \"mjeseci\";\n      },\n      function (c) {\n        if (c % 10 === 1 && c !== 11) {\n          return \"tjedan\";\n        }\n        return \"tjedna\";\n      },\n      function (c) {\n        return c === 1 ? \"dan\" : \"dana\";\n      },\n      function (c) {\n        if (c === 1) {\n          return \"sat\";\n        } else if (c === 2 || c === 3 || c === 4) {\n          return \"sata\";\n        }\n        return \"sati\";\n      },\n      function (c) {\n        var mod10 = c % 10;\n        if ((mod10 === 2 || mod10 === 3 || mod10 === 4) && (c < 10 || c > 14)) {\n          return \"minute\";\n        }\n        return \"minuta\";\n      },\n      function (c) {\n        var mod10 = c % 10;\n        if (mod10 === 5 || (Math.floor(c) === c && c >= 10 && c <= 19)) {\n          return \"sekundi\";\n        } else if (mod10 === 1) {\n          return \"sekunda\";\n        } else if (mod10 === 2 || mod10 === 3 || mod10 === 4) {\n          return \"sekunde\";\n        }\n        return \"sekundi\";\n      },\n      function (c) {\n        if (c === 1) {\n          return \"milisekunda\";\n        } else if (c % 10 === 2 || c % 10 === 3 || c % 10 === 4) {\n          return \"milisekunde\";\n        }\n        return \"milisekundi\";\n      },\n      \",\"\n    ),\n    hi: language(\n      \"साल\",\n      function (c) {\n        return c === 1 ? \"महीना\" : \"महीने\";\n      },\n      function (c) {\n        return c === 1 ? \"हफ़्ता\" : \"हफ्ते\";\n      },\n      \"दिन\",\n      function (c) {\n        return c === 1 ? \"घंटा\" : \"घंटे\";\n      },\n      \"मिनट\",\n      \"सेकंड\",\n      \"मिलीसेकंड\"\n    ),\n    hu: language(\n      \"év\",\n      \"hónap\",\n      \"hét\",\n      \"nap\",\n      \"óra\",\n      \"perc\",\n      \"másodperc\",\n      \"ezredmásodperc\",\n      \",\"\n    ),\n    id: language(\n      \"tahun\",\n      \"bulan\",\n      \"minggu\",\n      \"hari\",\n      \"jam\",\n      \"menit\",\n      \"detik\",\n      \"milidetik\"\n    ),\n    is: language(\n      \"ár\",\n      function (c) {\n        return \"mánuð\" + (c === 1 ? \"ur\" : \"ir\");\n      },\n      function (c) {\n        return \"vik\" + (c === 1 ? \"a\" : \"ur\");\n      },\n      function (c) {\n        return \"dag\" + (c === 1 ? \"ur\" : \"ar\");\n      },\n      function (c) {\n        return \"klukkutím\" + (c === 1 ? \"i\" : \"ar\");\n      },\n      function (c) {\n        return \"mínút\" + (c === 1 ? \"a\" : \"ur\");\n      },\n      function (c) {\n        return \"sekúnd\" + (c === 1 ? \"a\" : \"ur\");\n      },\n      function (c) {\n        return \"millisekúnd\" + (c === 1 ? \"a\" : \"ur\");\n      }\n    ),\n    it: language(\n      function (c) {\n        return \"ann\" + (c === 1 ? \"o\" : \"i\");\n      },\n      function (c) {\n        return \"mes\" + (c === 1 ? \"e\" : \"i\");\n      },\n      function (c) {\n        return \"settiman\" + (c === 1 ? \"a\" : \"e\");\n      },\n      function (c) {\n        return \"giorn\" + (c === 1 ? \"o\" : \"i\");\n      },\n      function (c) {\n        return \"or\" + (c === 1 ? \"a\" : \"e\");\n      },\n      function (c) {\n        return \"minut\" + (c === 1 ? \"o\" : \"i\");\n      },\n      function (c) {\n        return \"second\" + (c === 1 ? \"o\" : \"i\");\n      },\n      function (c) {\n        return \"millisecond\" + (c === 1 ? \"o\" : \"i\");\n      },\n      \",\"\n    ),\n    ja: language(\"年\", \"ヶ月\", \"週\", \"日\", \"時間\", \"分\", \"秒\", \"ミリ秒\"),\n    km: language(\n      \"ឆ្នាំ\",\n      \"ខែ\",\n      \"សប្តាហ៍\",\n      \"ថ្ងៃ\",\n      \"ម៉ោង\",\n      \"នាទី\",\n      \"វិនាទី\",\n      \"មិល្លីវិនាទី\"\n    ),\n    kn: language(\n      function (c) {\n        return c === 1 ? \"ವರ್ಷ\" : \"ವರ್ಷಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ತಿಂಗಳು\" : \"ತಿಂಗಳುಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ವಾರ\" : \"ವಾರಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ದಿನ\" : \"ದಿನಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ಗಂಟೆ\" : \"ಗಂಟೆಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ನಿಮಿಷ\" : \"ನಿಮಿಷಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ಸೆಕೆಂಡ್\" : \"ಸೆಕೆಂಡುಗಳು\";\n      },\n      function (c) {\n        return c === 1 ? \"ಮಿಲಿಸೆಕೆಂಡ್\" : \"ಮಿಲಿಸೆಕೆಂಡುಗಳು\";\n      }\n    ),\n    ko: language(\"년\", \"개월\", \"주일\", \"일\", \"시간\", \"분\", \"초\", \"밀리 초\"),\n    ku: language(\n      \"sal\",\n      \"meh\",\n      \"hefte\",\n      \"roj\",\n      \"seet\",\n      \"deqe\",\n      \"saniye\",\n      \"mîlîçirk\",\n      \",\"\n    ),\n    lo: language(\n      \"ປີ\",\n      \"ເດືອນ\",\n      \"ອາທິດ\",\n      \"ມື້\",\n      \"ຊົ່ວໂມງ\",\n      \"ນາທີ\",\n      \"ວິນາທີ\",\n      \"ມິນລິວິນາທີ\",\n      \",\"\n    ),\n    lt: language(\n      function (c) {\n        return c % 10 === 0 || (c % 100 >= 10 && c % 100 <= 20)\n          ? \"metų\"\n          : \"metai\";\n      },\n      function (c) {\n        return [\"mėnuo\", \"mėnesiai\", \"mėnesių\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"savaitė\", \"savaitės\", \"savaičių\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"diena\", \"dienos\", \"dienų\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"valanda\", \"valandos\", \"valandų\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"minutė\", \"minutės\", \"minučių\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"sekundė\", \"sekundės\", \"sekundžių\"][getLithuanianForm(c)];\n      },\n      function (c) {\n        return [\"milisekundė\", \"milisekundės\", \"milisekundžių\"][\n          getLithuanianForm(c)\n        ];\n      },\n      \",\"\n    ),\n    lv: language(\n      function (c) {\n        return getLatvianForm(c) ? \"gads\" : \"gadi\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"mēnesis\" : \"mēneši\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"nedēļa\" : \"nedēļas\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"diena\" : \"dienas\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"stunda\" : \"stundas\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"minūte\" : \"minūtes\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"sekunde\" : \"sekundes\";\n      },\n      function (c) {\n        return getLatvianForm(c) ? \"milisekunde\" : \"milisekundes\";\n      },\n      \",\"\n    ),\n    mk: language(\n      function (c) {\n        return c === 1 ? \"година\" : \"години\";\n      },\n      function (c) {\n        return c === 1 ? \"месец\" : \"месеци\";\n      },\n      function (c) {\n        return c === 1 ? \"недела\" : \"недели\";\n      },\n      function (c) {\n        return c === 1 ? \"ден\" : \"дена\";\n      },\n      function (c) {\n        return c === 1 ? \"час\" : \"часа\";\n      },\n      function (c) {\n        return c === 1 ? \"минута\" : \"минути\";\n      },\n      function (c) {\n        return c === 1 ? \"секунда\" : \"секунди\";\n      },\n      function (c) {\n        return c === 1 ? \"милисекунда\" : \"милисекунди\";\n      },\n      \",\"\n    ),\n    mn: language(\n      \"жил\",\n      \"сар\",\n      \"долоо хоног\",\n      \"өдөр\",\n      \"цаг\",\n      \"минут\",\n      \"секунд\",\n      \"миллисекунд\"\n    ),\n    mr: language(\n      function (c) {\n        return c === 1 ? \"वर्ष\" : \"वर्षे\";\n      },\n      function (c) {\n        return c === 1 ? \"महिना\" : \"महिने\";\n      },\n      function (c) {\n        return c === 1 ? \"आठवडा\" : \"आठवडे\";\n      },\n      \"दिवस\",\n      \"तास\",\n      function (c) {\n        return c === 1 ? \"मिनिट\" : \"मिनिटे\";\n      },\n      \"सेकंद\",\n      \"मिलिसेकंद\"\n    ),\n    ms: language(\n      \"tahun\",\n      \"bulan\",\n      \"minggu\",\n      \"hari\",\n      \"jam\",\n      \"minit\",\n      \"saat\",\n      \"milisaat\"\n    ),\n    nl: language(\n      \"jaar\",\n      function (c) {\n        return c === 1 ? \"maand\" : \"maanden\";\n      },\n      function (c) {\n        return c === 1 ? \"week\" : \"weken\";\n      },\n      function (c) {\n        return c === 1 ? \"dag\" : \"dagen\";\n      },\n      \"uur\",\n      function (c) {\n        return c === 1 ? \"minuut\" : \"minuten\";\n      },\n      function (c) {\n        return c === 1 ? \"seconde\" : \"seconden\";\n      },\n      function (c) {\n        return c === 1 ? \"milliseconde\" : \"milliseconden\";\n      },\n      \",\"\n    ),\n    no: language(\n      \"år\",\n      function (c) {\n        return \"måned\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"uke\" + (c === 1 ? \"\" : \"r\");\n      },\n      function (c) {\n        return \"dag\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"time\" + (c === 1 ? \"\" : \"r\");\n      },\n      function (c) {\n        return \"minutt\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"sekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"millisekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      \",\"\n    ),\n    pl: language(\n      function (c) {\n        return [\"rok\", \"roku\", \"lata\", \"lat\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"miesiąc\", \"miesiąca\", \"miesiące\", \"miesięcy\"][\n          getPolishForm(c)\n        ];\n      },\n      function (c) {\n        return [\"tydzień\", \"tygodnia\", \"tygodnie\", \"tygodni\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"dzień\", \"dnia\", \"dni\", \"dni\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"godzina\", \"godziny\", \"godziny\", \"godzin\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"minuta\", \"minuty\", \"minuty\", \"minut\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"sekunda\", \"sekundy\", \"sekundy\", \"sekund\"][getPolishForm(c)];\n      },\n      function (c) {\n        return [\"milisekunda\", \"milisekundy\", \"milisekundy\", \"milisekund\"][\n          getPolishForm(c)\n        ];\n      },\n      \",\"\n    ),\n    pt: language(\n      function (c) {\n        return \"ano\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return c === 1 ? \"mês\" : \"meses\";\n      },\n      function (c) {\n        return \"semana\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"dia\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"hora\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"minuto\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"segundo\" + (c === 1 ? \"\" : \"s\");\n      },\n      function (c) {\n        return \"milissegundo\" + (c === 1 ? \"\" : \"s\");\n      },\n      \",\"\n    ),\n    ro: language(\n      function (c) {\n        return c === 1 ? \"an\" : \"ani\";\n      },\n      function (c) {\n        return c === 1 ? \"lună\" : \"luni\";\n      },\n      function (c) {\n        return c === 1 ? \"săptămână\" : \"săptămâni\";\n      },\n      function (c) {\n        return c === 1 ? \"zi\" : \"zile\";\n      },\n      function (c) {\n        return c === 1 ? \"oră\" : \"ore\";\n      },\n      function (c) {\n        return c === 1 ? \"minut\" : \"minute\";\n      },\n      function (c) {\n        return c === 1 ? \"secundă\" : \"secunde\";\n      },\n      function (c) {\n        return c === 1 ? \"milisecundă\" : \"milisecunde\";\n      },\n      \",\"\n    ),\n    ru: language(\n      function (c) {\n        return [\"лет\", \"год\", \"года\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"месяцев\", \"месяц\", \"месяца\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"недель\", \"неделя\", \"недели\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"дней\", \"день\", \"дня\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"часов\", \"час\", \"часа\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"минут\", \"минута\", \"минуты\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"секунд\", \"секунда\", \"секунды\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"миллисекунд\", \"миллисекунда\", \"миллисекунды\"][\n          getSlavicForm(c)\n        ];\n      },\n      \",\"\n    ),\n    sq: language(\n      function (c) {\n        return c === 1 ? \"vit\" : \"vjet\";\n      },\n      \"muaj\",\n      \"javë\",\n      \"ditë\",\n      \"orë\",\n      function (c) {\n        return \"minut\" + (c === 1 ? \"ë\" : \"a\");\n      },\n      function (c) {\n        return \"sekond\" + (c === 1 ? \"ë\" : \"a\");\n      },\n      function (c) {\n        return \"milisekond\" + (c === 1 ? \"ë\" : \"a\");\n      },\n      \",\"\n    ),\n    sr: language(\n      function (c) {\n        return [\"години\", \"година\", \"године\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"месеци\", \"месец\", \"месеца\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"недељи\", \"недеља\", \"недеље\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"дани\", \"дан\", \"дана\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"сати\", \"сат\", \"сата\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"минута\", \"минут\", \"минута\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"секунди\", \"секунда\", \"секунде\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"милисекунди\", \"милисекунда\", \"милисекунде\"][getSlavicForm(c)];\n      },\n      \",\"\n    ),\n    ta: language(\n      function (c) {\n        return c === 1 ? \"வருடம்\" : \"ஆண்டுகள்\";\n      },\n      function (c) {\n        return c === 1 ? \"மாதம்\" : \"மாதங்கள்\";\n      },\n      function (c) {\n        return c === 1 ? \"வாரம்\" : \"வாரங்கள்\";\n      },\n      function (c) {\n        return c === 1 ? \"நாள்\" : \"நாட்கள்\";\n      },\n      function (c) {\n        return c === 1 ? \"மணி\" : \"மணிநேரம்\";\n      },\n      function (c) {\n        return \"நிமிட\" + (c === 1 ? \"ம்\" : \"ங்கள்\");\n      },\n      function (c) {\n        return \"வினாடி\" + (c === 1 ? \"\" : \"கள்\");\n      },\n      function (c) {\n        return \"மில்லி விநாடி\" + (c === 1 ? \"\" : \"கள்\");\n      }\n    ),\n    te: language(\n      function (c) {\n        return \"సంవత్స\" + (c === 1 ? \"రం\" : \"రాల\");\n      },\n      function (c) {\n        return \"నెల\" + (c === 1 ? \"\" : \"ల\");\n      },\n      function (c) {\n        return c === 1 ? \"వారం\" : \"వారాలు\";\n      },\n      function (c) {\n        return \"రోజు\" + (c === 1 ? \"\" : \"లు\");\n      },\n      function (c) {\n        return \"గంట\" + (c === 1 ? \"\" : \"లు\");\n      },\n      function (c) {\n        return c === 1 ? \"నిమిషం\" : \"నిమిషాలు\";\n      },\n      function (c) {\n        return c === 1 ? \"సెకను\" : \"సెకన్లు\";\n      },\n      function (c) {\n        return c === 1 ? \"మిల్లీసెకన్\" : \"మిల్లీసెకన్లు\";\n      }\n    ),\n    uk: language(\n      function (c) {\n        return [\"років\", \"рік\", \"роки\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"місяців\", \"місяць\", \"місяці\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"тижнів\", \"тиждень\", \"тижні\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"днів\", \"день\", \"дні\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"годин\", \"година\", \"години\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"хвилин\", \"хвилина\", \"хвилини\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"секунд\", \"секунда\", \"секунди\"][getSlavicForm(c)];\n      },\n      function (c) {\n        return [\"мілісекунд\", \"мілісекунда\", \"мілісекунди\"][getSlavicForm(c)];\n      },\n      \",\"\n    ),\n    ur: language(\n      \"سال\",\n      function (c) {\n        return c === 1 ? \"مہینہ\" : \"مہینے\";\n      },\n      function (c) {\n        return c === 1 ? \"ہفتہ\" : \"ہفتے\";\n      },\n      \"دن\",\n      function (c) {\n        return c === 1 ? \"گھنٹہ\" : \"گھنٹے\";\n      },\n      \"منٹ\",\n      \"سیکنڈ\",\n      \"ملی سیکنڈ\"\n    ),\n    sk: language(\n      function (c) {\n        return [\"rok\", \"roky\", \"roky\", \"rokov\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"mesiac\", \"mesiace\", \"mesiace\", \"mesiacov\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      function (c) {\n        return [\"týždeň\", \"týždne\", \"týždne\", \"týždňov\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      function (c) {\n        return [\"deň\", \"dni\", \"dni\", \"dní\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"hodina\", \"hodiny\", \"hodiny\", \"hodín\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"minúta\", \"minúty\", \"minúty\", \"minút\"][getCzechOrSlovakForm(c)];\n      },\n      function (c) {\n        return [\"sekunda\", \"sekundy\", \"sekundy\", \"sekúnd\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      function (c) {\n        return [\"milisekunda\", \"milisekundy\", \"milisekundy\", \"milisekúnd\"][\n          getCzechOrSlovakForm(c)\n        ];\n      },\n      \",\"\n    ),\n    sl: language(\n      function (c) {\n        if (c % 10 === 1) {\n          return \"leto\";\n        } else if (c % 100 === 2) {\n          return \"leti\";\n        } else if (\n          c % 100 === 3 ||\n          c % 100 === 4 ||\n          (Math.floor(c) !== c && c % 100 <= 5)\n        ) {\n          return \"leta\";\n        } else {\n          return \"let\";\n        }\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"mesec\";\n        } else if (c % 100 === 2 || (Math.floor(c) !== c && c % 100 <= 5)) {\n          return \"meseca\";\n        } else if (c % 10 === 3 || c % 10 === 4) {\n          return \"mesece\";\n        } else {\n          return \"mesecev\";\n        }\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"teden\";\n        } else if (c % 10 === 2 || (Math.floor(c) !== c && c % 100 <= 4)) {\n          return \"tedna\";\n        } else if (c % 10 === 3 || c % 10 === 4) {\n          return \"tedne\";\n        } else {\n          return \"tednov\";\n        }\n      },\n      function (c) {\n        return c % 100 === 1 ? \"dan\" : \"dni\";\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"ura\";\n        } else if (c % 100 === 2) {\n          return \"uri\";\n        } else if (c % 10 === 3 || c % 10 === 4 || Math.floor(c) !== c) {\n          return \"ure\";\n        } else {\n          return \"ur\";\n        }\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"minuta\";\n        } else if (c % 10 === 2) {\n          return \"minuti\";\n        } else if (\n          c % 10 === 3 ||\n          c % 10 === 4 ||\n          (Math.floor(c) !== c && c % 100 <= 4)\n        ) {\n          return \"minute\";\n        } else {\n          return \"minut\";\n        }\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"sekunda\";\n        } else if (c % 100 === 2) {\n          return \"sekundi\";\n        } else if (c % 100 === 3 || c % 100 === 4 || Math.floor(c) !== c) {\n          return \"sekunde\";\n        } else {\n          return \"sekund\";\n        }\n      },\n      function (c) {\n        if (c % 10 === 1) {\n          return \"milisekunda\";\n        } else if (c % 100 === 2) {\n          return \"milisekundi\";\n        } else if (c % 100 === 3 || c % 100 === 4 || Math.floor(c) !== c) {\n          return \"milisekunde\";\n        } else {\n          return \"milisekund\";\n        }\n      },\n      \",\"\n    ),\n    sv: language(\n      \"år\",\n      function (c) {\n        return \"månad\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"veck\" + (c === 1 ? \"a\" : \"or\");\n      },\n      function (c) {\n        return \"dag\" + (c === 1 ? \"\" : \"ar\");\n      },\n      function (c) {\n        return \"timm\" + (c === 1 ? \"e\" : \"ar\");\n      },\n      function (c) {\n        return \"minut\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"sekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      function (c) {\n        return \"millisekund\" + (c === 1 ? \"\" : \"er\");\n      },\n      \",\"\n    ),\n    sw: assign(\n      language(\n        function (c) {\n          return c === 1 ? \"mwaka\" : \"miaka\";\n        },\n        function (c) {\n          return c === 1 ? \"mwezi\" : \"miezi\";\n        },\n        \"wiki\",\n        function (c) {\n          return c === 1 ? \"siku\" : \"masiku\";\n        },\n        function (c) {\n          return c === 1 ? \"saa\" : \"masaa\";\n        },\n        \"dakika\",\n        \"sekunde\",\n        \"milisekunde\"\n      ),\n      { _numberFirst: true }\n    ),\n    tr: language(\n      \"yıl\",\n      \"ay\",\n      \"hafta\",\n      \"gün\",\n      \"saat\",\n      \"dakika\",\n      \"saniye\",\n      \"milisaniye\",\n      \",\"\n    ),\n    th: language(\n      \"ปี\",\n      \"เดือน\",\n      \"สัปดาห์\",\n      \"วัน\",\n      \"ชั่วโมง\",\n      \"นาที\",\n      \"วินาที\",\n      \"มิลลิวินาที\"\n    ),\n    uz: language(\n      \"yil\",\n      \"oy\",\n      \"hafta\",\n      \"kun\",\n      \"soat\",\n      \"minut\",\n      \"sekund\",\n      \"millisekund\"\n    ),\n    uz_CYR: language(\n      \"йил\",\n      \"ой\",\n      \"ҳафта\",\n      \"кун\",\n      \"соат\",\n      \"минут\",\n      \"секунд\",\n      \"миллисекунд\"\n    ),\n    vi: language(\n      \"năm\",\n      \"tháng\",\n      \"tuần\",\n      \"ngày\",\n      \"giờ\",\n      \"phút\",\n      \"giây\",\n      \"mili giây\",\n      \",\"\n    ),\n    zh_CN: language(\"年\", \"个月\", \"周\", \"天\", \"小时\", \"分钟\", \"秒\", \"毫秒\"),\n    zh_TW: language(\"年\", \"個月\", \"周\", \"天\", \"小時\", \"分鐘\", \"秒\", \"毫秒\")\n  };\n\n  /**\n   * Helper function for creating language definitions.\n   *\n   * @internal\n   * @param {Unit} y\n   * @param {Unit} mo\n   * @param {Unit} w\n   * @param {Unit} d\n   * @param {Unit} h\n   * @param {Unit} m\n   * @param {Unit} s\n   * @param {Unit} ms\n   * @param {string} [decimal]\n   * @returns {Language}\n   */\n  function language(y, mo, w, d, h, m, s, ms, decimal) {\n    /** @type {Language} */\n    var result = { y: y, mo: mo, w: w, d: d, h: h, m: m, s: s, ms: ms };\n    if (typeof decimal !== \"undefined\") {\n      result.decimal = decimal;\n    }\n    return result;\n  }\n\n  /**\n   * Helper function for Arabic.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {0 | 1 | 2}\n   */\n  function getArabicForm(c) {\n    if (c === 2) {\n      return 1;\n    }\n    if (c > 2 && c < 11) {\n      return 2;\n    }\n    return 0;\n  }\n\n  /**\n   * Helper function for Polish.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {0 | 1 | 2 | 3}\n   */\n  function getPolishForm(c) {\n    if (c === 1) {\n      return 0;\n    }\n    if (Math.floor(c) !== c) {\n      return 1;\n    }\n    if (c % 10 >= 2 && c % 10 <= 4 && !(c % 100 > 10 && c % 100 < 20)) {\n      return 2;\n    }\n    return 3;\n  }\n\n  /**\n   * Helper function for Slavic languages.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {0 | 1 | 2 | 3}\n   */\n  function getSlavicForm(c) {\n    if (Math.floor(c) !== c) {\n      return 2;\n    }\n    if (\n      (c % 100 >= 5 && c % 100 <= 20) ||\n      (c % 10 >= 5 && c % 10 <= 9) ||\n      c % 10 === 0\n    ) {\n      return 0;\n    }\n    if (c % 10 === 1) {\n      return 1;\n    }\n    if (c > 1) {\n      return 2;\n    }\n    return 0;\n  }\n\n  /**\n   * Helper function for Czech or Slovak.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {0 | 1 | 2 | 3}\n   */\n  function getCzechOrSlovakForm(c) {\n    if (c === 1) {\n      return 0;\n    }\n    if (Math.floor(c) !== c) {\n      return 1;\n    }\n    if (c % 10 >= 2 && c % 10 <= 4 && c % 100 < 10) {\n      return 2;\n    }\n    return 3;\n  }\n\n  /**\n   * Helper function for Lithuanian.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {0 | 1 | 2}\n   */\n  function getLithuanianForm(c) {\n    if (c === 1 || (c % 10 === 1 && c % 100 > 20)) {\n      return 0;\n    }\n    if (\n      Math.floor(c) !== c ||\n      (c % 10 >= 2 && c % 100 > 20) ||\n      (c % 10 >= 2 && c % 100 < 10)\n    ) {\n      return 1;\n    }\n    return 2;\n  }\n\n  /**\n   * Helper function for Latvian.\n   *\n   * @internal\n   * @param {number} c\n   * @returns {boolean}\n   */\n  function getLatvianForm(c) {\n    return c % 10 === 1 && c % 100 !== 11;\n  }\n\n  /**\n   * @internal\n   * @template T\n   * @param {T} obj\n   * @param {keyof T} key\n   * @returns {boolean}\n   */\n  function has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n  }\n\n  /**\n   * @internal\n   * @param {Pick<Required<Options>, \"language\" | \"fallbacks\" | \"languages\">} options\n   * @throws {Error} Throws an error if language is not found.\n   * @returns {Language}\n   */\n  function getLanguage(options) {\n    var possibleLanguages = [options.language];\n\n    if (has(options, \"fallbacks\")) {\n      if (isArray(options.fallbacks) && options.fallbacks.length) {\n        possibleLanguages = possibleLanguages.concat(options.fallbacks);\n      } else {\n        throw new Error(\"fallbacks must be an array with at least one element\");\n      }\n    }\n\n    for (var i = 0; i < possibleLanguages.length; i++) {\n      var languageToTry = possibleLanguages[i];\n      if (has(options.languages, languageToTry)) {\n        return options.languages[languageToTry];\n      }\n      if (has(LANGUAGES, languageToTry)) {\n        return LANGUAGES[languageToTry];\n      }\n    }\n\n    throw new Error(\"No language found.\");\n  }\n\n  /**\n   * @internal\n   * @param {Piece} piece\n   * @param {Language} language\n   * @param {Pick<Required<Options>, \"decimal\" | \"spacer\" | \"maxDecimalPoints\" | \"digitReplacements\">} options\n   */\n  function renderPiece(piece, language, options) {\n    var unitName = piece.unitName;\n    var unitCount = piece.unitCount;\n\n    var spacer = options.spacer;\n    var maxDecimalPoints = options.maxDecimalPoints;\n\n    /** @type {string} */\n    var decimal;\n    if (has(options, \"decimal\")) {\n      decimal = options.decimal;\n    } else if (has(language, \"decimal\")) {\n      decimal = language.decimal;\n    } else {\n      decimal = \".\";\n    }\n\n    /** @type {undefined | DigitReplacements} */\n    var digitReplacements;\n    if (\"digitReplacements\" in options) {\n      digitReplacements = options.digitReplacements;\n    } else if (\"_digitReplacements\" in language) {\n      digitReplacements = language._digitReplacements;\n    }\n\n    /** @type {string} */\n    var formattedCount;\n    var normalizedUnitCount =\n      maxDecimalPoints === void 0\n        ? unitCount\n        : Math.floor(unitCount * Math.pow(10, maxDecimalPoints)) /\n          Math.pow(10, maxDecimalPoints);\n    var countStr = normalizedUnitCount.toString();\n\n    if (language._hideCountIf2 && unitCount === 2) {\n      formattedCount = \"\";\n      spacer = \"\";\n    } else {\n      if (digitReplacements) {\n        formattedCount = \"\";\n        for (var i = 0; i < countStr.length; i++) {\n          var char = countStr[i];\n          if (char === \".\") {\n            formattedCount += decimal;\n          } else {\n            // @ts-ignore because `char` should always be 0-9 at this point.\n            formattedCount += digitReplacements[char];\n          }\n        }\n      } else {\n        formattedCount = countStr.replace(\".\", decimal);\n      }\n    }\n\n    var languageWord = language[unitName];\n    var word;\n    if (typeof languageWord === \"function\") {\n      word = languageWord(unitCount);\n    } else {\n      word = languageWord;\n    }\n\n    if (language._numberFirst) {\n      return word + spacer + formattedCount;\n    }\n    return formattedCount + spacer + word;\n  }\n\n  /**\n   * @internal\n   * @typedef {Object} Piece\n   * @prop {UnitName} unitName\n   * @prop {number} unitCount\n   */\n\n  /**\n   * @internal\n   * @param {number} ms\n   * @param {Pick<Required<Options>, \"units\" | \"unitMeasures\" | \"largest\" | \"round\">} options\n   * @returns {Piece[]}\n   */\n  function getPieces(ms, options) {\n    /** @type {UnitName} */\n    var unitName;\n\n    /** @type {number} */\n    var i;\n\n    /** @type {number} */\n    var unitCount;\n\n    /** @type {number} */\n    var msRemaining;\n\n    var units = options.units;\n    var unitMeasures = options.unitMeasures;\n    var largest = \"largest\" in options ? options.largest : Infinity;\n\n    if (!units.length) return [];\n\n    // Get the counts for each unit. Doesn't round or truncate anything.\n    // For example, might create an object like `{ y: 7, m: 6, w: 0, d: 5, h: 23.99 }`.\n    /** @type {Partial<Record<UnitName, number>>} */\n    var unitCounts = {};\n    msRemaining = ms;\n    for (i = 0; i < units.length; i++) {\n      unitName = units[i];\n      var unitMs = unitMeasures[unitName];\n\n      var isLast = i === units.length - 1;\n      unitCount = isLast\n        ? msRemaining / unitMs\n        : Math.floor(msRemaining / unitMs);\n      unitCounts[unitName] = unitCount;\n\n      msRemaining -= unitCount * unitMs;\n    }\n\n    if (options.round) {\n      // Update counts based on the `largest` option.\n      // For example, if `largest === 2` and `unitCount` is `{ y: 7, m: 6, w: 0, d: 5, h: 23.99 }`,\n      // updates to something like `{ y: 7, m: 6.2 }`.\n      var unitsRemainingBeforeRound = largest;\n      for (i = 0; i < units.length; i++) {\n        unitName = units[i];\n        unitCount = unitCounts[unitName];\n\n        if (unitCount === 0) continue;\n\n        unitsRemainingBeforeRound--;\n\n        // \"Take\" the rest of the units into this one.\n        if (unitsRemainingBeforeRound === 0) {\n          for (var j = i + 1; j < units.length; j++) {\n            var smallerUnitName = units[j];\n            var smallerUnitCount = unitCounts[smallerUnitName];\n            unitCounts[unitName] +=\n              (smallerUnitCount * unitMeasures[smallerUnitName]) /\n              unitMeasures[unitName];\n            unitCounts[smallerUnitName] = 0;\n          }\n          break;\n        }\n      }\n\n      // Round the last piece (which should be the only non-integer).\n      //\n      // This can be a little tricky if the last piece \"bubbles up\" to a larger\n      // unit. For example, \"3 days, 23.99 hours\" should be rounded to \"4 days\".\n      // It can also require multiple passes. For example, \"6 days, 23.99 hours\"\n      // should become \"1 week\".\n      for (i = units.length - 1; i >= 0; i--) {\n        unitName = units[i];\n        unitCount = unitCounts[unitName];\n\n        if (unitCount === 0) continue;\n\n        var rounded = Math.round(unitCount);\n        unitCounts[unitName] = rounded;\n\n        if (i === 0) break;\n\n        var previousUnitName = units[i - 1];\n        var previousUnitMs = unitMeasures[previousUnitName];\n        var amountOfPreviousUnit = Math.floor(\n          (rounded * unitMeasures[unitName]) / previousUnitMs\n        );\n        if (amountOfPreviousUnit) {\n          unitCounts[previousUnitName] += amountOfPreviousUnit;\n          unitCounts[unitName] = 0;\n        } else {\n          break;\n        }\n      }\n    }\n\n    /** @type {Piece[]} */\n    var result = [];\n    for (i = 0; i < units.length && result.length < largest; i++) {\n      unitName = units[i];\n      unitCount = unitCounts[unitName];\n      if (unitCount) {\n        result.push({ unitName: unitName, unitCount: unitCount });\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @internal\n   * @param {Piece[]} pieces\n   * @param {Pick<Required<Options>, \"units\" | \"language\" | \"languages\" | \"fallbacks\" | \"delimiter\" | \"spacer\" | \"decimal\" | \"conjunction\" | \"maxDecimalPoints\" | \"serialComma\" | \"digitReplacements\">} options\n   * @returns {string}\n   */\n  function formatPieces(pieces, options) {\n    var language = getLanguage(options);\n\n    if (!pieces.length) {\n      var units = options.units;\n      var smallestUnitName = units[units.length - 1];\n      return renderPiece(\n        { unitName: smallestUnitName, unitCount: 0 },\n        language,\n        options\n      );\n    }\n\n    var conjunction = options.conjunction;\n    var serialComma = options.serialComma;\n\n    var delimiter;\n    if (has(options, \"delimiter\")) {\n      delimiter = options.delimiter;\n    } else if (has(language, \"delimiter\")) {\n      delimiter = language.delimiter;\n    } else {\n      delimiter = \", \";\n    }\n\n    /** @type {string[]} */\n    var renderedPieces = [];\n    for (var i = 0; i < pieces.length; i++) {\n      renderedPieces.push(renderPiece(pieces[i], language, options));\n    }\n\n    if (!conjunction || pieces.length === 1) {\n      return renderedPieces.join(delimiter);\n    }\n\n    if (pieces.length === 2) {\n      return renderedPieces.join(conjunction);\n    }\n\n    return (\n      renderedPieces.slice(0, -1).join(delimiter) +\n      (serialComma ? \",\" : \"\") +\n      conjunction +\n      renderedPieces.slice(-1)\n    );\n  }\n\n  /**\n   * Create a humanizer, which lets you change the default options.\n   *\n   * @param {Options} [passedOptions]\n   */\n  function humanizer(passedOptions) {\n    /**\n     * @param {number} ms\n     * @param {Options} [humanizerOptions]\n     * @returns {string}\n     */\n    var result = function humanizer(ms, humanizerOptions) {\n      // Make sure we have a positive number.\n      //\n      // Has the nice side-effect of converting things to numbers. For example,\n      // converts `\"123\"` and `Number(123)` to `123`.\n      ms = Math.abs(ms);\n\n      var options = assign({}, result, humanizerOptions || {});\n\n      var pieces = getPieces(ms, options);\n\n      return formatPieces(pieces, options);\n    };\n\n    return assign(\n      result,\n      {\n        language: \"en\",\n        spacer: \" \",\n        conjunction: \"\",\n        serialComma: true,\n        units: [\"y\", \"mo\", \"w\", \"d\", \"h\", \"m\", \"s\"],\n        languages: {},\n        round: false,\n        unitMeasures: {\n          y: 31557600000,\n          mo: 2629800000,\n          w: 604800000,\n          d: 86400000,\n          h: 3600000,\n          m: 60000,\n          s: 1000,\n          ms: 1\n        }\n      },\n      passedOptions\n    );\n  }\n\n  /**\n   * Humanize a duration.\n   *\n   * This is a wrapper around the default humanizer.\n   */\n  var humanizeDuration = assign(humanizer({}), {\n    getSupportedLanguages: function getSupportedLanguages() {\n      var result = [];\n      for (var language in LANGUAGES) {\n        if (has(LANGUAGES, language) && language !== \"gr\") {\n          result.push(language);\n        }\n      }\n      return result;\n    },\n    humanizer: humanizer\n  });\n\n  // @ts-ignore\n  if (typeof define === \"function\" && define.amd) {\n    // @ts-ignore\n    define(function () {\n      return humanizeDuration;\n    });\n  } else if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = humanizeDuration;\n  } else {\n    this.humanizeDuration = humanizeDuration;\n  }\n})();\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export enum RoundingType {\n    DOLLAR = 'Nearest Dollar',\n    CENT = 'Nearest Cent'\n}\n","import { RoundingType } from \"../game/RoundingType\";\n\nconst humanizeDuration = require('humanize-duration');\n\nexport enum TableSpeed {\n    //Table Speed <-> number of seconds per roll * milliseconds\n    //These are just estimates that can be adjusted with better data\n    Slow = 45 * 1000,\n    Average = 30 * 1000,\n    Fast = 24 * 1000\n}\n\nexport function rollsToReadableDuration(numRolls: number | null, speed: TableSpeed) {\n    if (numRolls == null) {\n        return \"N/A\";\n    } else {\n        return humanizeDuration(speed * numRolls, { units: [\"h\", \"m\"], round: true })\n    }\n}\n\n\nexport function round(value: number, type: RoundingType): number {\n    switch (type) {\n        case RoundingType.DOLLAR: return Math.floor(value);\n        case RoundingType.CENT: {\n            var m = Number((value * 100).toPrecision(15));\n            return Math.round(m) / 100;\n        }\n        default: throw new Error(\"Unexpected rounding type: \" + JSON.stringify(type));\n\n    }\n}\n\nexport function convertToTwoDecimalPlaceString(num: number) {\n    return (Math.round(num * 100) / 100).toFixed(2);\n}\n\n\nexport function calculateOddsBetAmountAvoidRounding(plannedBet: number, dont: boolean, point: number): number {\n    if (!dont) {\n        //Pass or come bet odds calculation\n        switch (point) {\n            case 4:\n            case 10:\n                //The payout value will be calculated as 2*bet, so we just need a whole number.\n                return Math.ceil(plannedBet);\n            case 5:\n            case 9:\n                //The payout value will be calculated as 1.5*bet, so we need a number divisble by 2\n                return ceilToNearestMultiple(plannedBet, 2);\n            case 6:\n            case 8:\n                //The payout value will be calculated as 1.2*bet, so we need a number divisble by 5\n                return ceilToNearestMultiple(plannedBet, 5);\n            default:\n                throw new Error(\"Unexpected point value when calculating odds bet to avoid rounding: \" + point);\n        }\n    } else {\n        //Don't pass or don't come bet odds calculation\n        switch (point) {\n            case 4:\n            case 10:\n                //The payout value will be calculated as bet / 2, so we need a number divisble by 2\n                return ceilToNearestMultiple(plannedBet, 2);\n            case 5:\n            case 9:\n                //The payout value will be calculated as bet * 2/3, so we need a number divisble by 3\n                return ceilToNearestMultiple(plannedBet, 3);\n            case 6:\n            case 8:\n                //The payout value will be calculated as bet*5/6, so we need a number divisble by 6\n                return ceilToNearestMultiple(plannedBet, 6);\n            default:\n                throw new Error(\"Unexpected point value when calculating odds bet to avoid rounding: \" + point);\n        }\n    }\n}\n\nexport function calculateNumberBetAvoidRounding(\n    plannedBet: number,\n    number: 4 | 5 | 6 | 8 | 9 | 10\n): number {\n    // If the user’s “planned bet” is zero or negative, skip.\n    if (plannedBet <= 0) {\n        return plannedBet;\n    }\n\n    switch (number) {\n        case 4:\n        case 10:\n            // Always use ratio = 39/20 for 4/10 => to avoid fractional payoff, \n            // the bet must be a multiple of 20.\n            return ceilToNearestMultiple(plannedBet, 20);\n\n        case 5:\n        case 9:\n            // Pays 7:5 => bet must be multiple of 5\n            return ceilToNearestMultiple(plannedBet, 5);\n\n        case 6:\n        case 8:\n            // Pays 7:6 => bet must be multiple of 6\n            return ceilToNearestMultiple(plannedBet, 6);\n    }\n}\n\nfunction ceilToNearestMultiple(original: number, divisor: number) {\n    //Check if it's already divisble\n    if (original % divisor === 0) {\n        //This is already divisible. Just use it\n        return original;\n    } else {\n        //Not already divisible, let's find the closet.\n        const quotient = Math.floor(original / divisor);\n        return divisor * (quotient + 1); // Round up to nearest multiple\n    }\n}\n\n/**\n * For \"Power Press,\" we pick the largest multiple that doesn't exceed `amount`.\n * E.g. multiples of 6 for 6/8; multiples of 5 for 5/9; multiples of 20 or 5 for 4/10, etc.\n */\nexport function floorDownToProperUnit(\n    amount: number,\n    number: 4 | 5 | 6 | 8 | 9 | 10\n): number {\n    if (number === 6 || number === 8) {\n        return amount - (amount % 6);\n    }\n    if (number === 5 || number === 9) {\n        return amount - (amount % 5);\n    }\n    // For 4 & 10: if >= 20 => buy bets in increments of 20, else place bet increments of 5\n    if (number === 4 || number === 10) {\n        if (amount >= 20) {\n            return amount - (amount % 20);\n        } else {\n            return amount - (amount % 5);\n        }\n    }\n    return amount;\n}","\nexport enum OddsBetStrategyType {\n    NONE = 'None',\n    SETAMOUNT = 'Set Amount',\n    MULTIPLIER = 'Multiplier',\n    TABLEMAX = 'Max 3-4-5X'\n}\n\nexport type OddsBetStrategy = {\n    type: OddsBetStrategyType;\n    value: number;\n};\n","export enum PressStrategy {\n    NO_PRESS = \"No Press\",\n    HALF_PRESS = \"Half Press\",\n    FULL_PRESS = \"Full Press\",\n    POWER_PRESS = \"Power Press\"\n}","import { round } from \"../util/Util\";\nimport { OddsBetStrategy, OddsBetStrategyType } from \"./OddsBetStrategy\";\nimport { PressStrategy } from \"./PressStrategy\";\nimport { RoundingType } from \"./RoundingType\";\n\ninterface ConfigurationProps {\n    initialBankroll: number | null;\n    bankrollMinimum: number | null;\n    bankrollMaximum: number | null;\n    maximumRolls: number | null;\n    passBet: number | null;\n    passBetOddsStrategy: OddsBetStrategy;\n    comeBet: number | null;\n    maxComeBets: number;\n    comeBetOddsStrategy: OddsBetStrategy;\n    comeBetOddsWorkingComeOut: boolean;\n    dontPassBet: number | null;\n    dontPassBetOddsStrategy: OddsBetStrategy;\n    dontComeBet: number | null;\n    maxDontComeBets: number;\n    dontComeBetOddsStrategy: OddsBetStrategy;\n    dontComeBetOddsWorkingComeOut: boolean;\n    numberBet4: number | null;\n    numberBet5: number | null;\n    numberBet6: number | null;\n    numberBet8: number | null;\n    numberBet9: number | null;\n    numberBet10: number | null;\n    placeNumberBetsDuringComeOut: boolean;\n    leaveNumberBetsWorkingDuringComeOut: boolean;\n    omitNumberBetOnPoint: boolean;\n    pressLimit: number | null;\n    pressStrategy: PressStrategy;\n    avoidRounding: boolean;\n    rounding: RoundingType;\n    simulationCount: number | null;\n}\n\nexport class Configuration {\n    readonly initialBankroll: number | null;\n    readonly bankrollMinimum: number | null;\n    readonly bankrollMaximum: number | null;\n    readonly maximumRolls: number | null;\n    readonly passBet: number | null;\n    readonly passBetOddsStrategy: OddsBetStrategy;\n    readonly comeBet: number | null;\n    readonly maxComeBets: number;\n    readonly comeBetOddsStrategy: OddsBetStrategy;\n    readonly comeBetOddsWorkingComeOut: boolean;\n    readonly dontPassBet: number | null;\n    readonly dontPassBetOddsStrategy: OddsBetStrategy;\n    readonly dontComeBet: number | null;\n    readonly maxDontComeBets: number;\n    readonly dontComeBetOddsStrategy: OddsBetStrategy;\n    readonly dontComeBetOddsWorkingComeOut: boolean;\n    readonly numberBet4: number | null;\n    readonly numberBet5: number | null;\n    readonly numberBet6: number | null;\n    readonly numberBet8: number | null;\n    readonly numberBet9: number | null;\n    readonly numberBet10: number | null;\n    readonly placeNumberBetsDuringComeOut: boolean;\n    readonly leaveNumberBetsWorkingDuringComeOut: boolean;\n    readonly omitNumberBetOnPoint: boolean;\n    readonly pressLimit: number | null;\n    readonly pressStrategy: PressStrategy;\n    readonly avoidRounding: boolean;\n    readonly rounding: RoundingType;\n    readonly simulationCount: number | null;\n\n    constructor(\n        {\n            initialBankroll,\n            bankrollMinimum,\n            bankrollMaximum,\n            maximumRolls,\n            passBet,\n            passBetOddsStrategy,\n            comeBet,\n            maxComeBets,\n            comeBetOddsStrategy,\n            comeBetOddsWorkingComeOut,\n            dontPassBet,\n            dontPassBetOddsStrategy,\n            dontComeBet,\n            maxDontComeBets,\n            dontComeBetOddsStrategy,\n            dontComeBetOddsWorkingComeOut,\n            numberBet4,\n            numberBet5,\n            numberBet6,\n            numberBet8,\n            numberBet9,\n            numberBet10,\n            placeNumberBetsDuringComeOut,\n            leaveNumberBetsWorkingDuringComeOut,\n            omitNumberBetOnPoint,\n            pressLimit,\n            pressStrategy,\n            avoidRounding,\n            rounding,\n            simulationCount\n        }: ConfigurationProps) {\n        this.initialBankroll = initialBankroll ? round(initialBankroll, rounding) : initialBankroll;\n        this.bankrollMinimum = bankrollMinimum ? round(bankrollMinimum, rounding) : bankrollMinimum;\n        this.bankrollMaximum = bankrollMaximum ? round(bankrollMaximum, rounding) : bankrollMaximum;\n        this.maximumRolls = maximumRolls ? round(maximumRolls, RoundingType.DOLLAR) : maximumRolls;\n        this.passBet = passBet ? round(passBet, rounding) : passBet;\n        this.passBetOddsStrategy = passBetOddsStrategy;\n        this.comeBet = comeBet ? round(comeBet, rounding) : comeBet;\n        this.maxComeBets = maxComeBets ? round(maxComeBets, RoundingType.DOLLAR) : maxComeBets;\n        this.comeBetOddsStrategy = comeBetOddsStrategy;\n        this.comeBetOddsWorkingComeOut = comeBetOddsWorkingComeOut;\n        this.dontPassBet = dontPassBet ? round(dontPassBet, rounding) : dontPassBet;\n        this.dontPassBetOddsStrategy = dontPassBetOddsStrategy;\n        this.dontComeBet = dontComeBet ? round(dontComeBet, rounding) : dontComeBet;\n        this.maxDontComeBets = maxDontComeBets ? round(maxDontComeBets, RoundingType.DOLLAR) : maxDontComeBets;\n        this.dontComeBetOddsStrategy = dontComeBetOddsStrategy;\n        this.dontComeBetOddsWorkingComeOut = dontComeBetOddsWorkingComeOut;\n        this.numberBet4 = numberBet4 != null ? round(numberBet4, rounding) : null;\n        this.numberBet5 = numberBet5 != null ? round(numberBet5, rounding) : null;\n        this.numberBet6 = numberBet6 != null ? round(numberBet6, rounding) : null;\n        this.numberBet8 = numberBet8 != null ? round(numberBet8, rounding) : null;\n        this.numberBet9 = numberBet9 != null ? round(numberBet9, rounding) : null;\n        this.numberBet10 = numberBet10 != null ? round(numberBet10, rounding) : null;\n        this.placeNumberBetsDuringComeOut = placeNumberBetsDuringComeOut ?? false;\n        this.leaveNumberBetsWorkingDuringComeOut = leaveNumberBetsWorkingDuringComeOut ?? false;\n        this.omitNumberBetOnPoint = omitNumberBetOnPoint ?? true;\n        this.pressLimit = pressLimit != null ? pressLimit : null;\n        this.pressStrategy = pressStrategy || PressStrategy.NO_PRESS;\n        this.avoidRounding = avoidRounding;\n        this.rounding = rounding;\n        this.simulationCount = simulationCount ? round(simulationCount, RoundingType.DOLLAR) : simulationCount;\n    }\n\n    /* Provides the default configuration for the site */\n    static defaultConfiguration() {\n        return new Configuration(\n            {\n                initialBankroll: 300,\n                bankrollMinimum: 50,\n                bankrollMaximum: 450,\n                maximumRolls: 400,\n                passBet: 15,\n                passBetOddsStrategy: { type: OddsBetStrategyType.NONE, value: 1 },\n                comeBet: null,\n                maxComeBets: 3,\n                comeBetOddsStrategy: { type: OddsBetStrategyType.NONE, value: 1 },\n                comeBetOddsWorkingComeOut: false,\n                dontPassBet: null,\n                dontPassBetOddsStrategy: { type: OddsBetStrategyType.NONE, value: 1 },\n                dontComeBet: null,\n                maxDontComeBets: 3,\n                dontComeBetOddsStrategy: { type: OddsBetStrategyType.NONE, value: 1 },\n                dontComeBetOddsWorkingComeOut: true,\n                numberBet4: null,\n                numberBet5: null,\n                numberBet6: null,\n                numberBet8: null,\n                numberBet9: null,\n                numberBet10: null,\n                placeNumberBetsDuringComeOut: false,\n                leaveNumberBetsWorkingDuringComeOut: false,\n                omitNumberBetOnPoint: true,\n                pressLimit: null, // Unlimited by default\n                pressStrategy: PressStrategy.NO_PRESS,\n                avoidRounding: true,\n                rounding: RoundingType.DOLLAR,\n                simulationCount: 10_000\n            });\n    }\n\n    //All the setters return a new copy, with the specified value updated. \n\n    public setInitialBankroll(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { initialBankroll: value }));\n    }\n\n    public setBankrollMinimum(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { bankrollMinimum: value }));\n    }\n\n    public setBankrollMaximum(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { bankrollMaximum: value }));\n    }\n\n    public setMaximumRolls(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { maximumRolls: value }));\n    }\n\n    public setPassBet(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { passBet: value }));\n    }\n\n    public setPassBetOddsStrategy(value: OddsBetStrategy): Configuration {\n        return new Configuration(Object.assign(this, { passBetOddsStrategy: value }));\n    }\n\n    public setComeBet(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { comeBet: value }));\n    }\n\n    public setMaxComeBets(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { maxComeBets: value }));\n    }\n\n    public setComeBetOddsStrategy(value: OddsBetStrategy): Configuration {\n        return new Configuration(Object.assign(this, { comeBetOddsStrategy: value }));\n    }\n\n    public setComeBetOddsWorkingComeOut(value: boolean): Configuration {\n        return new Configuration(Object.assign(this, { comeBetOddsWorkingComeOut: value }));\n    }\n\n    public setDontPassBet(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { dontPassBet: value }));\n    }\n\n    public setDontPassBetOddsStrategy(value: OddsBetStrategy): Configuration {\n        return new Configuration(Object.assign(this, { dontPassBetOddsStrategy: value }));\n    }\n\n    public setDontComeBet(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { dontComeBet: value }));\n    }\n\n    public setMaxDontComeBets(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { maxDontComeBets: value }));\n    }\n\n    public setDontComeBetOddsStrategy(value: OddsBetStrategy): Configuration {\n        return new Configuration(Object.assign(this, { dontComeBetOddsStrategy: value }));\n    }\n\n    public setDontComeBetOddsWorkingComeOut(value: boolean): Configuration {\n        return new Configuration(Object.assign(this, { dontComeBetOddsWorkingComeOut: value }));\n    }\n\n    public setNumberBet4(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet4: value }));\n    }\n\n    public setNumberBet5(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet5: value }));\n    }\n\n    public setNumberBet6(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet6: value }));\n    }\n\n    public setNumberBet8(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet8: value }));\n    }\n\n    public setNumberBet9(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet9: value }));\n    }\n\n    public setNumberBet10(value: number | null): Configuration {\n        return new Configuration(Object.assign({}, this, { numberBet10: value }));\n    }\n\n    public setPlaceNumberBetsDuringComeOut(value: boolean): Configuration {\n        return new Configuration({ ...this, placeNumberBetsDuringComeOut: value });\n    }\n\n    public setLeaveNumberBetsWorkingDuringComeOut(value: boolean): Configuration {\n        return new Configuration({ ...this, leaveNumberBetsWorkingDuringComeOut: value });\n    }\n\n    public setOmitNumberBetOnPoint(value: boolean): Configuration {\n        return new Configuration({ ...this, omitNumberBetOnPoint: value });\n    }\n\n    public setPressLimit(value: number | null): Configuration {\n        return new Configuration({ ...this, pressLimit: value });\n    }\n\n    public setPressStrategy(value: PressStrategy): Configuration {\n        return new Configuration({ ...this, pressStrategy: value });\n    }\n\n    public setAvoidRounding(value: boolean): Configuration {\n        return new Configuration(Object.assign(this, { avoidRounding: value }));\n    }\n\n    public setRounding(value: RoundingType): Configuration {\n        return new Configuration(Object.assign(this, { rounding: value }));\n    }\n\n    public setSimulationCount(value: number | null): Configuration {\n        return new Configuration(Object.assign(this, { simulationCount: value }));\n    }\n\n    //For numeric fields that could be misconfigured, provide a validity check to make sure it has a valid value. \n\n    public isInitialBankrollValid(): boolean {\n        return this.initialBankroll != null && this.initialBankroll > 0;\n    }\n\n    public isBankrollMinimumValid(): boolean {\n        return (this.initialBankroll != null) && (this.bankrollMinimum == null || (this.bankrollMinimum >= 0 && this.bankrollMinimum < this.initialBankroll));\n    }\n\n    public isBankrollMaximumValid(): boolean {\n        return (this.initialBankroll != null) && (this.bankrollMaximum == null || this.bankrollMaximum > this.initialBankroll);\n    }\n\n    public isMaximumRollsValid(): boolean {\n        return this.maximumRolls == null || this.maximumRolls > 0;\n    }\n\n    public isSimulationCountValid(): boolean {\n        return this.simulationCount != null && this.simulationCount > 0;\n    }\n\n    public isPressLimitValid(): boolean {\n        return this.pressLimit === null || this.pressLimit >= 1;\n    }\n\n    public getInvalidFields(): string[] {\n        const fieldNames = [];\n        if (!this.isInitialBankrollValid()) {\n            fieldNames.push('Initial Bankroll');\n        }\n        if (!this.isBankrollMinimumValid()) {\n            fieldNames.push('Bankroll Minimum');\n        }\n        if (!this.isBankrollMaximumValid()) {\n            fieldNames.push('Bankroll Maximum');\n        }\n        if (!this.isMaximumRollsValid()) {\n            fieldNames.push('Maximum Rolls');\n        }\n        if (!this.isSimulationCountValid()) {\n            fieldNames.push('Simulation Count');\n        }\n        if (!this.isPressLimitValid()) {\n            fieldNames.push('Press Limit (must be empty for unlimited or 1 or greater)');\n        }\n        //Check that we have at least one bet:\n        if (this.passBet === null && this.comeBet === null && this.dontPassBet === null && this.dontComeBet === null && this.numberBet4 === null && this.numberBet5 === null && this.numberBet6 === null && this.numberBet8 === null && this.numberBet9 === null && this.numberBet10 === null) {\n            fieldNames.push('At least one bet must be configured.');\n        }\n        return fieldNames;\n    }\n\n}","import { Configuration } from \"./Configuration\";\n\ninterface GameStateProps {\n    configuration: Configuration;\n    rollNum: number;\n    bankroll: number;\n    point: number;\n    pointIsOn: boolean;\n    currentBets: BetCollection;\n    cashedOutNumbers: Array<4 | 5 | 6 | 8 | 9 | 10>;\n}\n\nexport interface Bet {\n    bet: number;\n    odds: number | null;\n}\n\nexport interface ComeBet extends Bet {\n    comePoint: number | null\n}\n\nexport interface NumberBet {\n    number: 4 | 5 | 6 | 8 | 9 | 10;\n    bet: number;\n    winCount: number; //Tracks how many times this particular number bet has won consecutively.\n}\n\nexport type BetCollection = {\n    passLineBet: Bet | null;\n    dontPassBet: Bet | null;\n    comeBets: Array<ComeBet>;\n    dontComeBets: Array<ComeBet>;\n    numberBets: Array<NumberBet>;\n}\n\nexport enum LimitReached {\n    BANKROLL_MAX = \"Upper Bankroll Limit\",\n    BANKROLL_MIN = \"Lower Bankroll Limit\",\n    BUSTED = \"Busted\",\n    MAX_ROLLS = \"Roll Limit\"\n}\n\nexport class GameState {\n    readonly configuration: Configuration;\n    readonly rollNum: number;\n    readonly bankroll: number;\n    readonly point: number;\n    readonly pointIsOn: boolean;\n    readonly currentBets: BetCollection;\n    readonly cashedOutNumbers: Array<4 | 5 | 6 | 8 | 9 | 10>;\n\n    constructor(\n        {\n            configuration,\n            rollNum,\n            bankroll,\n            point,\n            pointIsOn,\n            currentBets,\n            cashedOutNumbers,\n        }: GameStateProps) {\n        this.configuration = configuration;\n        this.rollNum = rollNum;\n        this.bankroll = bankroll;\n        this.point = point;\n        this.pointIsOn = pointIsOn;\n        this.currentBets = currentBets;\n        this.cashedOutNumbers = cashedOutNumbers;\n    }\n\n    static init(configuration: Configuration) {\n        if (configuration.getInvalidFields().length !== 0 || configuration.initialBankroll === null) {\n            throw new Error(`Cannot start game from invalid configuration: ${JSON.stringify(configuration)}`);\n\n        }\n\n        return new GameState(\n            {\n                configuration: configuration,\n                rollNum: 0,\n                bankroll: configuration.initialBankroll,\n                point: 0,\n                pointIsOn: false,\n                currentBets: { passLineBet: null, dontPassBet: null, comeBets: [], dontComeBets: [], numberBets: [] },\n                cashedOutNumbers: []\n            });\n    }\n\n    isDone(): boolean {\n        //Check if there's a current bet. If there's a current bet, we won't be done. Gotta play it out\n        if (this.hasCurrentBet()) {\n            return false;\n        }\n\n        //Check if we've reached some other limit.\n        return this.limitReached() !== null;\n    }\n\n    limitReached(): LimitReached | null {\n\n        //The minimum is set and we hit it\n        if (this.configuration.bankrollMinimum != null && this.configuration.bankrollMinimum > 0 && this.bankroll <= this.configuration.bankrollMinimum) {\n            return LimitReached.BANKROLL_MIN;\n        }\n\n        //The maximum value is set and we hit it\n        if (this.configuration.bankrollMaximum != null && this.bankroll >= this.configuration.bankrollMaximum) {\n            return LimitReached.BANKROLL_MAX;\n        }\n\n        //The maximum value is set and we hit it\n        if (this.configuration.maximumRolls != null && this.rollNum >= this.configuration.maximumRolls) {\n            return LimitReached.MAX_ROLLS;\n        }\n\n        //So we didn't hit any of the configured limit. We need to see if we have enough funds to even play, or if we've busted.\n        //Check if our current bankroll would allow us to even place the smallest bet we're configured to make. \n        //That is, do we even have enough money to place the smallest bet we're configured to make.\n        if (this.bankroll - this.minBetAmount() < 0) {\n            //Nope, we don't have enough funds to place even our smallest bet.\n            return LimitReached.BUSTED;\n        }\n\n        // 5. Enough to be > minimum but not enough to place any bet\n        if (this.configuration.bankrollMinimum != null && this.configuration.bankrollMinimum > 0) {\n            const difference = this.bankroll - this.configuration.bankrollMinimum;\n            if (difference > 0 && difference < this.minBetAmount()) {\n                // We can't place a bet without going below the minimum → effectively “walk away.”\n                return LimitReached.BANKROLL_MIN;\n            }\n        }\n\n\n        //No limit reached, play on!\n        return null;\n    }\n\n    hasCurrentBet(): boolean {\n        const { passLineBet, dontPassBet, comeBets, dontComeBets, numberBets } = this.currentBets;\n        if (passLineBet || dontPassBet) return true;\n        if (comeBets.length > 0 || dontComeBets.length > 0) return true;\n        if (numberBets.length > 0) return true; // <--- include number bets\n        return false;\n    }\n\n    minBetAmount(): number {\n        const cfg = this.configuration;\n\n        // We only look at configured bets that are > 0\n        const possibleBets: number[] = [];\n\n        if (cfg.passBet && cfg.passBet > 0) possibleBets.push(cfg.passBet);\n        if (cfg.dontPassBet && cfg.dontPassBet > 0) possibleBets.push(cfg.dontPassBet);\n        if (cfg.comeBet && cfg.comeBet > 0) possibleBets.push(cfg.comeBet);\n        if (cfg.dontComeBet && cfg.dontComeBet > 0) possibleBets.push(cfg.dontComeBet);\n\n        // Number bets. We should consider the smallest among 4,5,6,8,9,10 if set\n        const nb4 = cfg.numberBet4 ?? 0;\n        const nb5 = cfg.numberBet5 ?? 0;\n        const nb6 = cfg.numberBet6 ?? 0;\n        const nb8 = cfg.numberBet8 ?? 0;\n        const nb9 = cfg.numberBet9 ?? 0;\n        const nb10 = cfg.numberBet10 ?? 0;\n\n        [nb4, nb5, nb6, nb8, nb9, nb10].forEach((x) => {\n            if (x > 0) possibleBets.push(x);\n        });\n\n        if (possibleBets.length === 0) {\n            // If truly nothing is > 0, then there's no minimal bet. But\n            // realistically you'd never get here because your config was invalid\n            // if *all* bets were 0 or null. We might just return 0 or throw:\n            throw new Error(\"Unexpected configuration: all bets are zero/null. At least one bet is required.\");\n        }\n\n        return Math.min(...possibleBets);\n    }\n\n\n\n}","import { calculateNumberBetAvoidRounding, calculateOddsBetAmountAvoidRounding, floorDownToProperUnit, round } from \"../util/Util\";\nimport { Configuration } from \"./Configuration\";\nimport { BetCollection, GameState, NumberBet } from \"./GameState\";\nimport { OddsBetStrategy, OddsBetStrategyType } from \"./OddsBetStrategy\";\nimport { PressStrategy } from \"./PressStrategy\";\nimport { RoundingType } from \"./RoundingType\";\n\n/**\n * The available bet types for clarity in placing/resolving. \n * For number bets, we introduce a new type NUMBER_BET.\n */\nexport enum BetType {\n    PASSLINE = \"Pass Line Bet\",\n    PASSLINE_ODDS = \"Pass Line Odds Bet\",\n    DONTPASS = \"Don't Pass Bet\",\n    DONTPASS_ODDS = \"Don't Pass Odds Bet\",\n    COME = \"Come Bet\",\n    COME_ODDS = \"Come Odds Bet\",\n    DONTCOME = \"Don't Come Bet\",\n    DONTCOME_ODDS = \"Don't Come Odds Bet\",\n    NUMBER_BET = \"Number Bet\"\n}\n\n/**\n * Outcomes for each resolved bet.\n */\nexport enum BetOutcome {\n    WIN = \"Win\",\n    LOSS = \"Loss\",\n    PUSH = \"Push\"\n}\n\n/**\n * PlacedBet is used to track each newly placed bet in a single roll,\n * so that we can display it in the simulation UI if desired.\n */\nexport type PlacedBet = {\n    type: BetType;\n    bet: number;\n    number?: 4 | 5 | 6 | 8 | 9 | 10;\n};\n\n/**\n * ResolvedBet is used after the roll to indicate how a particular bet\n * was resolved: Win, Loss, or Push, along with how much was paid out (if any).\n */\nexport type ResolvedBet = {\n    placedBet: PlacedBet;\n    outcome: BetOutcome;\n    payout: number;\n};\n\n/**\n * RollResult is the full data returned from one roll:\n * - The state of the game before the roll\n * - Any new bets placed\n * - The roll's dice total\n * - Which bets resolved and how\n * - The resulting state of the game after resolution\n */\nexport type RollResult = {\n    initialState: GameState;\n    newBets: Array<PlacedBet>;\n    placedBetState: GameState;\n    roll: number;\n    resolvedBets: Array<ResolvedBet>;\n    resultingState: GameState;\n};\n\n/**\n * Execute a single roll of the dice:\n * 1) Place bets according to the user's strategy.\n * 2) Roll the dice.\n * 3) Resolve the outcome of all bets.\n * Returns a RollResult object containing full details.\n */\nexport function executeSingleRoll(initialState: GameState): RollResult {\n    //First, check if the game is over. If so, do nothing.\n    if (initialState.isDone()) {\n        return {\n            initialState,\n            newBets: [],\n            placedBetState: initialState,\n            roll: 0,\n            resolvedBets: [],\n            resultingState: initialState\n        };\n    }\n\n    //Phase 1: Place bets (including line bets, come/don't come, odds, and number bets)\n    const { placedBetState, newBets } = placeBets(initialState);\n\n    //Phase 2: Roll the dice\n    const firstDie = rollDie();\n    const secondDie = rollDie();\n    const roll = firstDie + secondDie;\n\n    //Phase 3: Resolve bets\n    const { resultingState, resolvedBets } = resolveBets(placedBetState, roll);\n\n    return {\n        initialState,\n        newBets,\n        placedBetState,\n        roll,\n        resolvedBets,\n        resultingState\n    };\n}\n\n/**\n * Phase 1: Place bets according to the strategy:\n *  - Pass/Don't Pass if point is off\n *  - Come/Don't Come if point is on\n *  - Lay odds if configured\n *  - Place/Buy bets on the numbers 4,5,6,8,9,10\n */\nfunction placeBets(\n    initialState: GameState\n): { placedBetState: GameState; newBets: Array<PlacedBet> } {\n    //If we've already reached some limit, don't place new bets.\n    if (initialState.limitReached() !== null) {\n        return { placedBetState: initialState, newBets: [] };\n    }\n\n    let newBets: PlacedBet[] = [];\n    let bankroll = initialState.bankroll;\n    const pointIsOn = initialState.pointIsOn;\n    const point = initialState.point;\n    let currentBets = cloneBetCollection(initialState.currentBets);\n    const cfg = initialState.configuration;\n    const cashedOutNumbers = initialState.cashedOutNumbers ? [...initialState.cashedOutNumbers] : [];\n\n    //1) Possibly place odds on existing line bets if point is on\n    const oddsResult = placeOddsBets(initialState, bankroll, currentBets);\n    bankroll = oddsResult.bankroll;\n    currentBets = oddsResult.currentBets;\n    newBets.push(...oddsResult.newBets);\n\n    //2) If the point is off, place pass line or don't pass\n    if (!initialState.pointIsOn) {\n        if (cfg.passBet && cfg.passBet > 0 && canPlaceBet(bankroll, cfg.passBet, cfg.bankrollMinimum)) {\n            bankroll -= cfg.passBet;\n            currentBets.passLineBet = { bet: cfg.passBet, odds: null };\n            newBets.push({ type: BetType.PASSLINE, bet: cfg.passBet });\n        }\n        if (cfg.dontPassBet && cfg.dontPassBet > 0 && canPlaceBet(bankroll, cfg.dontPassBet, cfg.bankrollMinimum)) {\n            bankroll -= cfg.dontPassBet;\n            currentBets.dontPassBet = { bet: cfg.dontPassBet, odds: null };\n            newBets.push({ type: BetType.DONTPASS, bet: cfg.dontPassBet });\n        }\n    } else {\n        //If the point is on, place come/don't come if user config wants them\n        if (\n            cfg.comeBet &&\n            cfg.comeBet > 0 &&\n            currentBets.comeBets.length < cfg.maxComeBets &&\n            canPlaceBet(bankroll, cfg.comeBet, cfg.bankrollMinimum)\n        ) {\n            if (bankroll >= cfg.comeBet) {\n                bankroll -= cfg.comeBet;\n                currentBets.comeBets.push({ bet: cfg.comeBet, odds: null, comePoint: null });\n                newBets.push({ type: BetType.COME, bet: cfg.comeBet });\n            }\n        }\n        if (\n            cfg.dontComeBet &&\n            cfg.dontComeBet > 0 &&\n            currentBets.dontComeBets.length < cfg.maxDontComeBets &&\n            canPlaceBet(bankroll, cfg.dontComeBet, cfg.bankrollMinimum)\n        ) {\n            if (bankroll >= cfg.dontComeBet) {\n                bankroll -= cfg.dontComeBet;\n                currentBets.dontComeBets.push({ bet: cfg.dontComeBet, odds: null, comePoint: null });\n                newBets.push({ type: BetType.DONTCOME, bet: cfg.dontComeBet });\n            }\n        }\n    }\n\n    // 3) Place or maintain number bets (4,5,6,8,9,10)\n    if (!pointIsOn) {\n        // On a come‑out roll, only place number bets if allowed.\n        if (cfg.placeNumberBetsDuringComeOut) {\n            const result = placeNewNumberBetsForCycle(cfg, pointIsOn, point, cashedOutNumbers, currentBets, bankroll);\n            newBets.push(...result.newBets);\n            currentBets = result.currentBets;\n            bankroll = result.bankroll;\n        }\n        // Clear out cashedOutNumbers since the table resets on come‑out.\n        cashedOutNumbers.length = 0;\n    } else {\n        // When the point is on, do not re‐place any bet that was removed (e.g. due to press limit).\n        const result = placeNewNumberBetsForCycle(cfg, pointIsOn, point, cashedOutNumbers, currentBets, bankroll, true);\n        newBets.push(...result.newBets);\n        currentBets = result.currentBets;\n        bankroll = result.bankroll;\n    }\n\n    const placedBetState = new GameState({\n        configuration: cfg,\n        bankroll,\n        currentBets,\n        pointIsOn: initialState.pointIsOn,\n        point: initialState.point,\n        rollNum: initialState.rollNum,\n        cashedOutNumbers,\n    });\n\n    return { placedBetState, newBets };\n}\n\n/**\n * Helper to place odds on pass/don't pass, come/don't come bets\n * if the user configured an odds strategy.\n */\nfunction placeOddsBets(\n    initialState: GameState,\n    bankroll: number,\n    currentBets: BetCollection\n): {\n    bankroll: number;\n    currentBets: BetCollection;\n    newBets: PlacedBet[];\n} {\n    const newBets: PlacedBet[] = [];\n    const cfg = initialState.configuration;\n    const isPointOn = initialState.pointIsOn;\n    const point = initialState.point;\n    const avoidRounding = cfg.avoidRounding;\n    const rounding = cfg.rounding;\n\n    //--- Pass Line Odds\n    if (isPointOn && currentBets.passLineBet && currentBets.passLineBet.odds == null) {\n        const strat = cfg.passBetOddsStrategy;\n        if (strat.type !== OddsBetStrategyType.NONE) {\n            const odds = calculateOddsBetAmount({\n                controllingBetValue: currentBets.passLineBet.bet,\n                strategy: strat,\n                avoidRounding,\n                rounding,\n                dont: false,\n                point\n            });\n            if (odds > 0 && canPlaceBet(bankroll, odds, cfg.bankrollMinimum)) {\n                bankroll -= odds;\n                currentBets.passLineBet = { ...currentBets.passLineBet, odds };\n                newBets.push({ type: BetType.PASSLINE_ODDS, bet: odds });\n            }\n        }\n    }\n\n    //--- Don't Pass Odds\n    if (isPointOn && currentBets.dontPassBet && currentBets.dontPassBet.odds == null) {\n        const strat = cfg.dontPassBetOddsStrategy;\n        if (strat.type !== OddsBetStrategyType.NONE) {\n            const odds = calculateOddsBetAmount({\n                controllingBetValue: currentBets.dontPassBet.bet,\n                strategy: strat,\n                avoidRounding,\n                rounding,\n                dont: true,\n                point\n            });\n            if (odds > 0 && canPlaceBet(bankroll, odds, cfg.bankrollMinimum)) {\n                bankroll -= odds;\n                currentBets.dontPassBet = { ...currentBets.dontPassBet, odds };\n                newBets.push({ type: BetType.DONTPASS_ODDS, bet: odds });\n            }\n        }\n    }\n\n    //--- Come Bet Odds\n    for (const c of currentBets.comeBets) {\n        if (c.comePoint != null && c.odds == null) {\n            const strat = cfg.comeBetOddsStrategy;\n            if (strat.type !== OddsBetStrategyType.NONE) {\n                //Check if table is on or if the user wants come odds working on come-out\n                if (isPointOn || cfg.comeBetOddsWorkingComeOut) {\n                    const odds = calculateOddsBetAmount({\n                        controllingBetValue: c.bet,\n                        strategy: strat,\n                        avoidRounding,\n                        rounding,\n                        dont: false,\n                        point: c.comePoint\n                    });\n                    if (odds > 0 && canPlaceBet(bankroll, odds, cfg.bankrollMinimum)) {\n                        bankroll -= odds;\n                        c.odds = odds;\n                        newBets.push({ type: BetType.COME_ODDS, bet: odds });\n                    }\n                }\n            }\n        }\n    }\n\n    //--- Don't Come Bet Odds\n    for (const dc of currentBets.dontComeBets) {\n        if (dc.comePoint != null && dc.odds == null) {\n            const strat = cfg.dontComeBetOddsStrategy;\n            if (strat.type !== OddsBetStrategyType.NONE) {\n                if (isPointOn || cfg.dontComeBetOddsWorkingComeOut) {\n                    const odds = calculateOddsBetAmount({\n                        controllingBetValue: dc.bet,\n                        strategy: strat,\n                        avoidRounding,\n                        rounding,\n                        dont: true,\n                        point: dc.comePoint\n                    });\n                    if (odds > 0 && canPlaceBet(bankroll, odds, cfg.bankrollMinimum)) {\n                        bankroll -= odds;\n                        dc.odds = odds;\n                        newBets.push({ type: BetType.DONTCOME_ODDS, bet: odds });\n                    }\n                }\n            }\n        }\n    }\n\n    return { bankroll, currentBets, newBets };\n}\n\n/**\n * Phase 2: Compute how much we are willing to bet on the odds.\n * Checks the chosen OddsBetStrategy in the user's config (None, Set Amount, \n * Multiplier, or Table Max).\n */\nfunction calculateOddsBetAmount({\n    controllingBetValue,\n    strategy,\n    avoidRounding,\n    rounding,\n    dont,\n    point\n}: {\n    controllingBetValue: number;\n    strategy: OddsBetStrategy;\n    avoidRounding: boolean;\n    rounding: RoundingType;\n    dont: boolean;\n    point: number;\n}): number {\n    switch (strategy.type) {\n        case OddsBetStrategyType.NONE:\n            return 0;\n        case OddsBetStrategyType.SETAMOUNT:\n            if (avoidRounding) {\n                return calculateOddsBetAmountAvoidRounding(strategy.value, dont, point);\n            }\n            return round(strategy.value, rounding);\n        case OddsBetStrategyType.MULTIPLIER:\n            {\n                const raw = controllingBetValue * strategy.value;\n                if (avoidRounding) {\n                    return calculateOddsBetAmountAvoidRounding(raw, dont, point);\n                }\n                return round(raw, rounding);\n            }\n        case OddsBetStrategyType.TABLEMAX:\n            {\n                // Standard Vegas 3-4-5x pass, typically 6x for don't\n                if (dont) {\n                    // 6x\n                    return round(6 * controllingBetValue, rounding);\n                } else {\n                    switch (point) {\n                        case 4:\n                        case 10:\n                            return round(3 * controllingBetValue, rounding);\n                        case 5:\n                        case 9:\n                            return round(4 * controllingBetValue, rounding);\n                        case 6:\n                        case 8:\n                            return round(5 * controllingBetValue, rounding);\n                        default:\n                            return 0;\n                    }\n                }\n            }\n        default:\n            return 0;\n    }\n}\n\nfunction placeNewNumberBetsForCycle(\n    cfg: Configuration,\n    pointIsOn: boolean,\n    point: number,\n    cashedOutNumbers: Array<4 | 5 | 6 | 8 | 9 | 10>,\n    currentBets: BetCollection,\n    bankroll: number,\n    skipIfCashedOut: boolean = false\n): { newBets: PlacedBet[]; currentBets: BetCollection; bankroll: number } {\n    let newBets: PlacedBet[] = [];\n    const numberConfigs: Array<{ number: 4 | 5 | 6 | 8 | 9 | 10; amount: number | null }> = [\n        { number: 6, amount: cfg.numberBet6 },\n        { number: 8, amount: cfg.numberBet8 },\n        { number: 5, amount: cfg.numberBet5 },\n        { number: 9, amount: cfg.numberBet9 },\n        { number: 4, amount: cfg.numberBet4 },\n        { number: 10, amount: cfg.numberBet10 },\n    ];\n\n    for (const { number, amount } of numberConfigs) {\n        if (!amount || amount <= 0) continue;\n        // If the configuration says to omit a bet when the number equals the point, skip it.\n        if (cfg.omitNumberBetOnPoint && pointIsOn && point === number) continue;\n        // If we are skipping replacement for cashed‑out bets, then skip numbers that were just cashed out.\n        if (skipIfCashedOut && cashedOutNumbers.includes(number)) continue;\n        // If a bet on this number already exists, skip.\n        const existing = currentBets.numberBets.find((nb) => nb.number === number);\n        if (existing) continue;\n\n        let amountWithRounding = amount;\n        if (cfg.avoidRounding) {\n            amountWithRounding = calculateNumberBetAvoidRounding(amount, number);\n        }\n        if (canPlaceBet(bankroll, amountWithRounding, cfg.bankrollMinimum)) {\n            bankroll -= amountWithRounding;\n            currentBets.numberBets.push({ number, bet: amountWithRounding, winCount: 0 });\n            newBets.push({ type: BetType.NUMBER_BET, bet: amountWithRounding, number });\n        }\n    }\n    return { newBets, currentBets, bankroll };\n}\n\n/**\n * Phase 3: Resolve bets after the roll:\n *  1) Resolve line bets (pass/don't pass) and come/don't come\n *  2) Resolve any number bets if they are \"working\"\n *  3) Update point as needed\n */\nfunction resolveBets(\n    placedBetState: GameState,\n    roll: number\n): { resultingState: GameState; resolvedBets: Array<ResolvedBet> } {\n    let bankroll = placedBetState.bankroll;\n    let currentBets = cloneBetCollection(placedBetState.currentBets);\n    let { pointIsOn, point } = placedBetState;\n    const cfg = placedBetState.configuration;\n\n    let resolvedBets: ResolvedBet[] = [];\n\n    //--- Resolve pass/don't pass, come/don't come\n    const lineResult = resolveLineAndComeBets(\n        placedBetState,\n        roll,\n        bankroll,\n        currentBets,\n        pointIsOn,\n        point,\n        resolvedBets\n    );\n    bankroll = lineResult.bankroll;\n    currentBets = lineResult.currentBets;\n    pointIsOn = lineResult.pointIsOn;\n    point = lineResult.point;\n    // Instead of reassigning resolvedBets, we push...\n    resolvedBets.push(...lineResult.resolvedBets);\n\n    let cashedOutNumbers = [...placedBetState.cashedOutNumbers];\n\n    // Resolve Number Bets\n    if (pointIsOn) {\n        // When point is on, always resolve number bets.\n        const numberResult = resolveNumberBets(roll, bankroll, currentBets, resolvedBets, cfg);\n        bankroll = numberResult.bankroll;\n        currentBets = numberResult.currentBets;\n        resolvedBets = numberResult.resolvedBets;\n        cashedOutNumbers = [...numberResult.cashedOut];\n    } else {\n        // On come‑out roll:\n        if (cfg.leaveNumberBetsWorkingDuringComeOut) {\n            const numberResult = resolveNumberBets(roll, bankroll, currentBets, resolvedBets, cfg);\n            bankroll = numberResult.bankroll;\n            currentBets = numberResult.currentBets;\n            resolvedBets = numberResult.resolvedBets;\n            cashedOutNumbers = [...numberResult.cashedOut];\n        } else {\n            // Bets are off during the come‑out roll:\n            // Do nothing with them — the bets remain on the table unchanged,\n            // and they are not resolved (i.e. no win/loss is recorded, bankroll remains unchanged).\n        }\n    }\n\n    //--- Finally, update come points if needed\n    let rollNum = placedBetState.rollNum + 1;\n\n    if (pointIsOn) {\n        // If we just rolled the point or a 7, turn the point off\n        if (roll === point || roll === 7) {\n            pointIsOn = false;\n            point = 0;\n        }\n    } else {\n        // If point is off and we rolled 4,5,6,8,9,10 => turn point on\n        if ([4, 5, 6, 8, 9, 10].includes(roll)) {\n            pointIsOn = true;\n            point = roll;\n        }\n    }\n\n    //--- Update come/don't come bets (their comePoint)\n    const updatedComeBets = [];\n    for (const c of currentBets.comeBets) {\n        if (c.comePoint == null && [4, 5, 6, 8, 9, 10].includes(roll)) {\n            c.comePoint = roll;\n        }\n        updatedComeBets.push({ ...c });\n    }\n    currentBets.comeBets = updatedComeBets;\n\n    const updatedDontComeBets = [];\n    for (const dc of currentBets.dontComeBets) {\n        if (dc.comePoint == null && [4, 5, 6, 8, 9, 10].includes(roll)) {\n            dc.comePoint = roll;\n        }\n        updatedDontComeBets.push({ ...dc });\n    }\n    currentBets.dontComeBets = updatedDontComeBets;\n\n    //--- Build the resulting game state\n    const resultingState = new GameState({\n        configuration: cfg,\n        bankroll,\n        currentBets,\n        rollNum,\n        pointIsOn,\n        point,\n        cashedOutNumbers,\n    });\n\n    return { resultingState, resolvedBets };\n}\n\n/**\n * Resolve pass/don't pass, come/don't come bets, updating the bankroll\n * and removing winning/losing bets from the table.\n */\nfunction resolveLineAndComeBets(\n    placedBetState: GameState,\n    roll: number,\n    bankroll: number,\n    currentBets: BetCollection,\n    pointIsOn: boolean,\n    point: number,\n    incomingResolvedBets: ResolvedBet[]\n): {\n    bankroll: number;\n    currentBets: BetCollection;\n    pointIsOn: boolean;\n    point: number;\n    resolvedBets: ResolvedBet[];\n} {\n    // We append new resolved bets to a local array, \n    // then return that array so the caller can handle merging\n    let resolvedBets: ResolvedBet[] = [];\n\n    //--- Pass Line\n    if (currentBets.passLineBet) {\n        const pl = currentBets.passLineBet;\n        if (pointIsOn) {\n            // If roll = point => pass wins. If roll=7 => pass loses\n            if (roll === point) {\n                // Base bet\n                bankroll += pl.bet; // winnings\n                bankroll += pl.bet; // original\n                resolvedBets.push({\n                    placedBet: { type: BetType.PASSLINE, bet: pl.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: pl.bet\n                });\n                // Odds\n                if (pl.odds) {\n                    let payout = passLineOddsPayout(point, pl.odds, placedBetState.configuration.rounding);\n                    bankroll += payout;\n                    bankroll += pl.odds;\n                    resolvedBets.push({\n                        placedBet: { type: BetType.PASSLINE_ODDS, bet: pl.odds },\n                        outcome: BetOutcome.WIN,\n                        payout\n                    });\n                }\n                currentBets.passLineBet = null;\n            } else if (roll === 7) {\n                // lose\n                resolvedBets.push({\n                    placedBet: { type: BetType.PASSLINE, bet: pl.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                if (pl.odds) {\n                    resolvedBets.push({\n                        placedBet: { type: BetType.PASSLINE_ODDS, bet: pl.odds },\n                        outcome: BetOutcome.LOSS,\n                        payout: 0\n                    });\n                }\n                currentBets.passLineBet = null;\n            }\n        } else {\n            // come-out roll\n            if (roll === 7 || roll === 11) {\n                bankroll += pl.bet;\n                bankroll += pl.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.PASSLINE, bet: pl.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: pl.bet\n                });\n                currentBets.passLineBet = null;\n            } else if (roll === 2 || roll === 3 || roll === 12) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.PASSLINE, bet: pl.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                currentBets.passLineBet = null;\n            }\n        }\n    }\n\n    //--- Come Bets\n    const updatedComeBets = [];\n    for (const c of currentBets.comeBets) {\n        if (c.comePoint != null) {\n            // come point established\n            if (roll === c.comePoint) {\n                bankroll += c.bet;\n                bankroll += c.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.COME, bet: c.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: c.bet\n                });\n                if (c.odds) {\n                    if (pointIsOn || placedBetState.configuration.comeBetOddsWorkingComeOut) {\n                        let payout = passLineOddsPayout(c.comePoint, c.odds, placedBetState.configuration.rounding);\n                        bankroll += payout;\n                        bankroll += c.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.COME_ODDS, bet: c.odds },\n                            outcome: BetOutcome.WIN,\n                            payout\n                        });\n                    } else {\n                        // if odds are off, push\n                        bankroll += c.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.COME_ODDS, bet: c.odds },\n                            outcome: BetOutcome.PUSH,\n                            payout: c.odds\n                        });\n                    }\n                }\n            } else if (roll === 7) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.COME, bet: c.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                if (c.odds) {\n                    if (pointIsOn || placedBetState.configuration.comeBetOddsWorkingComeOut) {\n                        resolvedBets.push({\n                            placedBet: { type: BetType.COME_ODDS, bet: c.odds },\n                            outcome: BetOutcome.LOSS,\n                            payout: 0\n                        });\n                    } else {\n                        bankroll += c.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.COME_ODDS, bet: c.odds },\n                            outcome: BetOutcome.PUSH,\n                            payout: c.odds\n                        });\n                    }\n                }\n            } else {\n                updatedComeBets.push(c);\n            }\n        } else {\n            // come-out for the come bet\n            if (roll === 7 || roll === 11) {\n                bankroll += c.bet;\n                bankroll += c.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.COME, bet: c.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: c.bet\n                });\n            } else if (roll === 2 || roll === 3 || roll === 12) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.COME, bet: c.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n            } else {\n                updatedComeBets.push(c);\n            }\n        }\n    }\n    currentBets.comeBets = updatedComeBets;\n\n    //--- Don't Pass\n    if (currentBets.dontPassBet) {\n        const dp = currentBets.dontPassBet;\n        if (pointIsOn) {\n            if (roll === 7) {\n                // don't pass wins\n                bankroll += dp.bet;\n                bankroll += dp.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTPASS, bet: dp.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: dp.bet\n                });\n                if (dp.odds) {\n                    const payoff = dontPassOddsPayout(point, dp.odds, placedBetState.configuration.rounding);\n                    bankroll += payoff;\n                    bankroll += dp.odds;\n                    resolvedBets.push({\n                        placedBet: { type: BetType.DONTPASS_ODDS, bet: dp.odds },\n                        outcome: BetOutcome.WIN,\n                        payout: payoff\n                    });\n                }\n                currentBets.dontPassBet = null;\n            } else if (roll === point) {\n                // lose\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTPASS, bet: dp.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                if (dp.odds) {\n                    resolvedBets.push({\n                        placedBet: { type: BetType.DONTPASS_ODDS, bet: dp.odds },\n                        outcome: BetOutcome.LOSS,\n                        payout: 0\n                    });\n                }\n                currentBets.dontPassBet = null;\n            }\n        } else {\n            // come-out\n            if (roll === 2 || roll === 3) {\n                bankroll += dp.bet;\n                bankroll += dp.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTPASS, bet: dp.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: dp.bet\n                });\n                currentBets.dontPassBet = null;\n            } else if (roll === 7 || roll === 11) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTPASS, bet: dp.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                currentBets.dontPassBet = null;\n            } else if (roll === 12) {\n                // push\n                bankroll += dp.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTPASS, bet: dp.bet },\n                    outcome: BetOutcome.PUSH,\n                    payout: dp.bet\n                });\n                currentBets.dontPassBet = null;\n            }\n        }\n    }\n\n    //--- Don't Come\n    const updatedDontComeBets = [];\n    for (const dc of currentBets.dontComeBets) {\n        if (dc.comePoint != null) {\n            if (roll === 7) {\n                bankroll += dc.bet;\n                bankroll += dc.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTCOME, bet: dc.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: dc.bet\n                });\n                if (dc.odds) {\n                    if (pointIsOn || placedBetState.configuration.dontComeBetOddsWorkingComeOut) {\n                        const payoff = dontPassOddsPayout(dc.comePoint, dc.odds, placedBetState.configuration.rounding);\n                        bankroll += payoff;\n                        bankroll += dc.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.DONTCOME_ODDS, bet: dc.odds },\n                            outcome: BetOutcome.WIN,\n                            payout: payoff\n                        });\n                    } else {\n                        // push\n                        bankroll += dc.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.DONTCOME_ODDS, bet: dc.odds },\n                            outcome: BetOutcome.PUSH,\n                            payout: dc.odds\n                        });\n                    }\n                }\n            } else if (roll === dc.comePoint) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTCOME, bet: dc.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n                if (dc.odds) {\n                    if (pointIsOn || placedBetState.configuration.dontComeBetOddsWorkingComeOut) {\n                        resolvedBets.push({\n                            placedBet: { type: BetType.DONTCOME_ODDS, bet: dc.odds },\n                            outcome: BetOutcome.LOSS,\n                            payout: 0\n                        });\n                    } else {\n                        bankroll += dc.odds;\n                        resolvedBets.push({\n                            placedBet: { type: BetType.DONTCOME_ODDS, bet: dc.odds },\n                            outcome: BetOutcome.PUSH,\n                            payout: dc.odds\n                        });\n                    }\n                }\n            } else {\n                updatedDontComeBets.push(dc);\n            }\n        } else {\n            // come-out for don't come\n            if (roll === 2 || roll === 3) {\n                bankroll += dc.bet;\n                bankroll += dc.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTCOME, bet: dc.bet },\n                    outcome: BetOutcome.WIN,\n                    payout: dc.bet\n                });\n            } else if (roll === 7 || roll === 11) {\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTCOME, bet: dc.bet },\n                    outcome: BetOutcome.LOSS,\n                    payout: 0\n                });\n            } else if (roll === 12) {\n                // push\n                bankroll += dc.bet;\n                resolvedBets.push({\n                    placedBet: { type: BetType.DONTCOME, bet: dc.bet },\n                    outcome: BetOutcome.PUSH,\n                    payout: dc.bet\n                });\n            } else {\n                updatedDontComeBets.push(dc);\n            }\n        }\n    }\n    currentBets.dontComeBets = updatedDontComeBets;\n\n    return {\n        bankroll,\n        currentBets,\n        pointIsOn,\n        point,\n        resolvedBets\n    };\n}\n\n/**\n * Resolve any placed number bets (4,5,6,8,9,10).\n * Follows Wizard of Odds simplified approach:\n *  - 4/10: buy/place pays 39:20\n *  - 5/9: buy/place pays 7:5\n *  - 6/8: buy/place pays 7:6\n * If roll=7 => all lose. \n */\nfunction resolveNumberBets(\n    roll: number,\n    bankroll: number,\n    currentBets: BetCollection,\n    resolvedBets: ResolvedBet[],\n    cfg: Configuration\n): { bankroll: number; currentBets: BetCollection; resolvedBets: ResolvedBet[], cashedOut: Array<4 | 5 | 6 | 8 | 9 | 10> } {\n    const cashedOut: Array<4 | 5 | 6 | 8 | 9 | 10> = [];\n\n    // On a 7, all number bets lose.\n    if (roll === 7) {\n        for (const nb of currentBets.numberBets) {\n            resolvedBets.push({\n                placedBet: { type: BetType.NUMBER_BET, bet: nb.bet, number: nb.number },\n                outcome: BetOutcome.LOSS,\n                payout: 0\n            });\n        }\n        currentBets.numberBets = [];\n        return { bankroll, currentBets, resolvedBets, cashedOut };\n    }\n\n    const updatedNumberBets: NumberBet[] = [];\n    for (const nb of currentBets.numberBets) {\n        if (roll === nb.number) {\n            // The bet won:\n            // 1) calculate payoff based on standard place/buy rules\n            const payoff = calculateNumberBetPayoff(nb.bet, nb.number, cfg.rounding);\n\n            // 2) apply press strategy to see how much goes back onto the bet\n            const { updatedBetSize, netToBankroll } = applyPressStrategy(\n                nb.bet,\n                payoff,\n                nb.number,\n                cfg.pressStrategy\n            );\n\n            // 3) Add leftover portion to bankroll\n            bankroll += netToBankroll;\n\n            // 4) increment the bet’s consecutive‐wins count\n            nb.winCount++;\n\n            // 5) check pressLimit to see if we remove it\n            if (cfg.pressLimit !== null && nb.winCount >= cfg.pressLimit) {\n                // Reached the limit => remove the bet from the table\n                // Typically you get the entire final bet back if you remove it\n                bankroll += updatedBetSize;\n\n                resolvedBets.push({\n                    placedBet: { type: BetType.NUMBER_BET, bet: nb.bet, number: nb.number },\n                    outcome: BetOutcome.WIN,\n                    payout: payoff,\n                });\n\n                cashedOut.push(nb.number);\n            } else {\n                // Remain on the table pressed up\n                nb.bet = updatedBetSize;\n\n                resolvedBets.push({\n                    placedBet: { type: BetType.NUMBER_BET, bet: nb.bet, number: nb.number },\n                    outcome: BetOutcome.WIN,\n                    payout: payoff,\n                });\n\n                updatedNumberBets.push(nb);\n            }\n        } else {\n            // Not a winning roll => just keep the bet as is\n            updatedNumberBets.push(nb);\n        }\n    }\n    currentBets.numberBets = updatedNumberBets;\n    return { bankroll, currentBets, resolvedBets, cashedOut };\n}\n\n/**\n * Applies the chosen press strategy to a winning number bet. \n * \n * @param currentBet   The bet size prior to this win\n * @param payoff       The amount won on this roll\n * @param number       4,5,6,8,9,10\n * @param strategy     NO_PRESS, HALF_PRESS, FULL_PRESS, POWER_PRESS\n * @returns            updatedBetSize, netToBankroll\n */\nfunction applyPressStrategy(\n    currentBet: number,\n    payoff: number,\n    number: 4 | 5 | 6 | 8 | 9 | 10,\n    strategy: PressStrategy\n): { updatedBetSize: number; netToBankroll: number } {\n    switch (strategy) {\n        case PressStrategy.NO_PRESS:\n            // All winnings to bankroll\n            return {\n                updatedBetSize: currentBet,\n                netToBankroll: payoff\n            };\n\n        case PressStrategy.HALF_PRESS:\n            // 50% of payoff to the bet; the rest to bankroll\n            const half = payoff / 2;\n            return {\n                updatedBetSize: currentBet + half,\n                netToBankroll: payoff - half\n            };\n\n        case PressStrategy.FULL_PRESS:\n            // All payoff is reinvested\n            return {\n                updatedBetSize: currentBet + payoff,\n                netToBankroll: 0\n            };\n\n        case PressStrategy.POWER_PRESS:\n            // Attempt to press the entire payoff but snap to a \"clean multiple\"\n            // so future payouts won't be fractional (and not to exceed payoff).\n            const maxPossible = currentBet + payoff;\n            const finalPressed = floorDownToProperUnit(maxPossible, number);\n            return {\n                updatedBetSize: finalPressed,\n                netToBankroll: maxPossible - finalPressed\n            };\n\n        default:\n            // Fallback\n            return {\n                updatedBetSize: currentBet,\n                netToBankroll: payoff\n            };\n    }\n}\n\n\n\n/**\n * Creates a full copy of all bets. \n * This ensures the new arrays and objects won't mutate old states.\n */\nfunction cloneBetCollection(bets: BetCollection): BetCollection {\n    return {\n        passLineBet: bets.passLineBet\n            ? { ...bets.passLineBet }\n            : null,\n        dontPassBet: bets.dontPassBet\n            ? { ...bets.dontPassBet }\n            : null,\n        comeBets: bets.comeBets.map(c => ({ ...c })),\n        dontComeBets: bets.dontComeBets.map(dc => ({ ...dc })),\n        numberBets: bets.numberBets.map(nb => ({ ...nb }))\n    };\n}\n\n/**\n * Calculates the payoff for a bet on 4,5,6,8,9,10 using Wizard of Odds simplification of Place and Buy bets approach:\n * - For 4 or 10: pays 39:20\n * - For 5 or 9:  pays 7:5\n * - For 6 or 8:  pays 7:6\n */\nfunction calculateNumberBetPayoff(\n    bet: number,\n    number: number,\n    rounding: RoundingType\n): number {\n    let ratio: number;\n    switch (number) {\n        case 4:\n        case 10:\n            // Wizard-of-Odds combined buy: 39:20 => 1.95\n            ratio = 1.95;\n            break;\n        case 5:\n        case 9:\n            // 7:5 => 1.4\n            ratio = 1.4;\n            break;\n        case 6:\n        case 8:\n            // 7:6 => approx 1.1667\n            ratio = 7 / 6;\n            break;\n        default:\n            return 0;\n    }\n    const rawWin = bet * ratio;\n    return round(rawWin, rounding);\n}\n\n\n/**\n * Helper to compute pass line odds payout for a point (4=2:1,5=3:2,6=6:5, etc.)\n */\nfunction passLineOddsPayout(point: number, odds: number, rounding: RoundingType): number {\n    switch (point) {\n        case 4:\n        case 10:\n            return round(2 * odds, rounding);\n        case 5:\n        case 9:\n            return round(1.5 * odds, rounding);\n        case 6:\n        case 8:\n            return round(1.2 * odds, rounding);\n        default:\n            return 0;\n    }\n}\n\n/**\n * Helper to compute don't pass/don't come odds payout (4=1:2,5=2:3,6=5:6, etc.)\n */\nfunction dontPassOddsPayout(point: number, odds: number, rounding: RoundingType): number {\n    switch (point) {\n        case 4:\n        case 10:\n            return round(odds / 2, rounding);\n        case 5:\n        case 9:\n            return round((2 / 3) * odds, rounding);\n        case 6:\n        case 8:\n            return round((5 / 6) * odds, rounding);\n        default:\n            return 0;\n    }\n}\n\n/**\n * A small helper that checks if we can place a bet of size `bet`\n * given the current `bankroll`, taking the configured\n * `bankrollMinimum` into account. Returns `true` if the bet\n * can be placed without dropping below that minimum, otherwise false.\n */\nfunction canPlaceBet(\n    bankroll: number,\n    bet: number,\n    bankrollMinimum: number | null\n): boolean {\n    if (bet <= 0) return false;             // must be a positive bet\n    if (bet > bankroll) return false;       // cannot exceed bankroll entirely\n    if (bankrollMinimum !== null && bankrollMinimum > 0) {\n        const prospective = bankroll - bet;\n        if (prospective < bankrollMinimum) {\n            return false; // would drop us below the configured min\n        }\n    }\n    return true;\n}\n\n/**\n * Rolls a single six-sided die (1-6).\n */\nfunction rollDie(): number {\n    return Math.floor(Math.random() * 6) + 1;\n}\n\n","import { Configuration } from \"../game/Configuration\";\nimport { GameState } from \"../game/GameState\";\nimport { executeSingleRoll } from \"../game/Session\";\n\ndeclare const self: DedicatedWorkerGlobalScope;\nexport default {} as typeof Worker & { new(): Worker };\n\nself.onmessage = async ($event: MessageEvent) => {\n    if ($event && $event.data) {\n        //Convert configuration back into a proper class instance.\n        //It gets boiled down to JSON in the message passing.\n        const configuration = new Configuration($event.data.configuration);\n        const simCount = $event.data.simCount;\n        const results = [];\n        for (let i = 0; i < simCount; i++) {\n            let gameState = GameState.init(configuration);\n            while (!gameState.isDone()) {\n                const output = executeSingleRoll(gameState);\n                gameState = output.resultingState;\n            }\n            results.push(gameState);\n\n            //Send update\n            if ((i + 1) % 1000 === 0) {\n                self.postMessage(\"1000 complete\");\n            }\n        }\n\n        //All done. Send results\n        self.postMessage(results);\n    }\n};\n"],"names":["assign","Object","destination","source","i","arguments","length","prop","has","isArray","Array","arg","prototype","toString","call","GREEK","language","c","LANGUAGES","af","am","ar","getArabicForm","delimiter","_hideCountIf2","_digitReplacements","bg","getSlavicForm","bn","ca","ckb","cs","getCzechOrSlovakForm","cy","da","de","el","en","eo","es","et","eu","fa","fi","fo","fr","gr","he","hr","mod10","Math","floor","hi","hu","id","is","it","ja","km","kn","ko","ku","lo","lt","getLithuanianForm","lv","getLatvianForm","mk","mn","mr","ms","nl","no","pl","getPolishForm","pt","ro","ru","sq","sr","ta","te","uk","ur","sk","sl","sv","sw","_numberFirst","tr","th","uz","uz_CYR","vi","zh_CN","zh_TW","y","mo","w","d","h","m","s","decimal","result","obj","key","hasOwnProperty","renderPiece","piece","options","digitReplacements","formattedCount","unitName","unitCount","spacer","maxDecimalPoints","countStr","pow","char","replace","word","languageWord","formatPieces","pieces","possibleLanguages","fallbacks","Error","concat","languageToTry","languages","getLanguage","units","conjunction","serialComma","renderedPieces","push","join","slice","humanizer","passedOptions","humanizerOptions","abs","msRemaining","unitMeasures","largest","Infinity","unitCounts","unitMs","round","unitsRemainingBeforeRound","j","smallerUnitName","smallerUnitCount","rounded","previousUnitName","previousUnitMs","amountOfPreviousUnit","getPieces","humanizeDuration","getSupportedLanguages","define","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","RoundingType","require","value","type","DOLLAR","CENT","Number","toPrecision","JSON","stringify","calculateOddsBetAmountAvoidRounding","plannedBet","dont","point","ceilToNearestMultiple","ceil","calculateNumberBetAvoidRounding","number","original","divisor","OddsBetStrategyType","PressStrategy","Configuration","constructor","_ref","initialBankroll","bankrollMinimum","bankrollMaximum","maximumRolls","passBet","passBetOddsStrategy","comeBet","maxComeBets","comeBetOddsStrategy","comeBetOddsWorkingComeOut","dontPassBet","dontPassBetOddsStrategy","dontComeBet","maxDontComeBets","dontComeBetOddsStrategy","dontComeBetOddsWorkingComeOut","numberBet4","numberBet5","numberBet6","numberBet8","numberBet9","numberBet10","placeNumberBetsDuringComeOut","leaveNumberBetsWorkingDuringComeOut","omitNumberBetOnPoint","pressLimit","pressStrategy","avoidRounding","rounding","simulationCount","this","NO_PRESS","defaultConfiguration","NONE","setInitialBankroll","setBankrollMinimum","setBankrollMaximum","setMaximumRolls","setPassBet","setPassBetOddsStrategy","setComeBet","setMaxComeBets","setComeBetOddsStrategy","setComeBetOddsWorkingComeOut","setDontPassBet","setDontPassBetOddsStrategy","setDontComeBet","setMaxDontComeBets","setDontComeBetOddsStrategy","setDontComeBetOddsWorkingComeOut","setNumberBet4","setNumberBet5","setNumberBet6","setNumberBet8","setNumberBet9","setNumberBet10","setPlaceNumberBetsDuringComeOut","setLeaveNumberBetsWorkingDuringComeOut","setOmitNumberBetOnPoint","setPressLimit","setPressStrategy","setAvoidRounding","setRounding","setSimulationCount","isInitialBankrollValid","isBankrollMinimumValid","isBankrollMaximumValid","isMaximumRollsValid","isSimulationCountValid","isPressLimitValid","getInvalidFields","fieldNames","LimitReached","GameState","configuration","rollNum","bankroll","pointIsOn","currentBets","cashedOutNumbers","init","passLineBet","comeBets","dontComeBets","numberBets","isDone","hasCurrentBet","limitReached","BANKROLL_MIN","BANKROLL_MAX","MAX_ROLLS","minBetAmount","BUSTED","difference","_cfg$numberBet","_cfg$numberBet2","_cfg$numberBet3","_cfg$numberBet4","_cfg$numberBet5","_cfg$numberBet6","cfg","possibleBets","forEach","x","min","BetType","BetOutcome","executeSingleRoll","initialState","newBets","placedBetState","roll","resolvedBets","resultingState","cloneBetCollection","oddsResult","isPointOn","odds","strat","calculateOddsBetAmount","controllingBetValue","bet","strategy","canPlaceBet","PASSLINE_ODDS","DONTPASS_ODDS","comePoint","COME_ODDS","dc","DONTCOME_ODDS","placeOddsBets","COME","DONTCOME","PASSLINE","DONTPASS","placeNewNumberBetsForCycle","placeBets","rollDie","lineResult","placedBet","outcome","WIN","payout","passLineOddsPayout","LOSS","updatedComeBets","PUSH","dp","payoff","dontPassOddsPayout","updatedDontComeBets","resolveLineAndComeBets","numberResult","resolveNumberBets","cashedOut","includes","resolveBets","SETAMOUNT","MULTIPLIER","raw","TABLEMAX","skipIfCashedOut","numberConfigs","amount","find","nb","amountWithRounding","winCount","NUMBER_BET","updatedNumberBets","calculateNumberBetPayoff","updatedBetSize","netToBankroll","applyPressStrategy","currentBet","HALF_PRESS","half","FULL_PRESS","POWER_PRESS","maxPossible","finalPressed","floorDownToProperUnit","bets","map","ratio","random","self","onmessage","async","$event","data","simCount","results","gameState","postMessage"],"sourceRoot":""}